{"version":3,"sources":["assets/logo.png","assets/banner.jpg","assets/ElectronicChimeKevanGC.wav","assets/ElectronicChimeKevanGC.ogg","assets/ElectronicChimeKevanGC.mp3","images/login_image.png","utils/index.js","components/common/Input.jsx","components/common/Preview.jsx","components/auth/AuthStyle.js","components/common/Select.jsx","components/common/Logo.jsx","graphql/mutations.js","graphql/queries.js","components/common/Spinner.jsx","components/auth/Onboarding.jsx","components/common/PrivateRoute.jsx","components/auth/LogIn.jsx","components/dashboard/DashboardStyle.js","components/dashboard/StyledRecomendedWorkout.js","components/dashboard/RecommendedWorkouts.jsx","components/dashboard/Chart.jsx","components/dashboard/StyledChart.js","components/dashboard/Charts.jsx","components/common/Quotes.jsx","components/common/Streak.jsx","components/dashboard/Dashboard.jsx","components/auth/SignUp.jsx","components/workouts/WorkoutStyle.js","components/workouts/Workout.jsx","components/workouts/Workouts.jsx","components/common/Search.jsx","components/workouts/WorkoutList.jsx","components/common/SideTitle.jsx","components/workouts/DetailList.jsx","components/common/Timer.jsx","components/common/Calendar.jsx","components/common/Time.jsx","components/workouts/WorkoutHistoryStyle.js","components/workouts/WorkoutActionItems.jsx","components/workouts/WorkoutDetail.jsx","components/exercise/ExerciseStyle.js","components/exercise/Exercise.jsx","components/exercise/Exercises.jsx","components/exercise/ExerciseList.jsx","components/exercise/ExerciseDetail.jsx","components/common/Navigation.jsx","components/workouts/WorkoutHistoryCard.jsx","components/workouts/WorkoutHistory.jsx","components/schedule/ScheduleStyle.js","components/schedule/ScheduleDetail.jsx","components/auth/AccountRecovery.jsx","components/common/ModalPopup.jsx","components/common/EditProfile.jsx","components/dashboard/ProfilePage.jsx","components/workouts/CustomWorkoutDetail.jsx","components/common/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","isLoggedIn","userData","JSON","parse","localStorage","getItem","token","decodedToken","jwtDecode","currentTime","Date","now","exp","removeItem","getUserDetails","id","firstname","user_id","isNewUser","useDebounce","value","timeout","useState","state","setState","useEffect","handler","setTimeout","clearTimeout","generateRandomItem","array","Math","floor","random","length","CustomStyledInput","styled","div","Input","name","placeholder","variant","type","onChange","error","onBlur","touchedName","bg","_hover","focusBorderColor","errorBorderColor","StyledPreview","randomPreview","preview","Preview","pageName","className","style","backgroundImage","AuthStyle","CustomStyledSelect","Select","options","map","option","key","text","defaultProps","StyledLogo","isSignedIn","route","Logo","to","src","LogoImage","alt","SIGNUP_MUTATION","gql","GOOGLE_AUTH_MUTATION","ONBOARDING","UPLOAD_PROGRESS_PICTURE","START_WORKOUT","PAUSE_WORKOUT","END_WORKOUT","SCHEDULE_WORKOUT","UPSERT_CUSTOM_WORKOUT","DELETE_CUSTOM_WORKOUT","UPDATE_USER_DETAILS","RESET_PASSWORD","LOGIN_QUERY","GET_UNITS","GET_COMPLETED_WORKOUTS","GET_WORKOUTS","GET_WORKOUTS_BY_FIELDS","GET_WORKOUT_DETAIL","GET_EXERCISES","GET_EXERCISE","GET_RECOMMENDED_WORKOUTS","GET_SCHEDULE","GET_DASHBOARD_DETAILS","EXERCISES_BY_FIELDS","GET_USER_DETAILS","ACCOUNT_RECOVERY","CustomSpinner","thickness","size","Box","Spinner","emptyColor","color","ml","withApollo","client","history","toast","useToast","heightUnits","setHeightUnits","weightUnits","setWeightUnits","isLoading","setIsLoading","alert","title","description","status","duration","isClosable","formik","useFormik","initialValues","goal","equipment","experience","heightUnit","weightUnit","height","weight","validationSchema","yup","shape","required","onSubmit","mutate","mutation","variables","then","res","setItem","stringify","userOnboardedSuccessfully","push","window","location","reload","catch","query","data","units","filter","unit","CustomRadio","React","forwardRef","props","ref","isChecked","isDisabled","onClick","rest","Button","borderColor","aria-checked","role","Flex","width","justifyContent","align","handleSubmit","errors","values","handleChange","handleBlur","touched","RadioButtonGroup","defaultValue","isInline","err","charAt","toUpperCase","slice","variantColor","rightIcon","PrivateRoute","path","Component","component","render","loginSuccess","setLoginSuccess","loading","setLoading","setIsSignedIn","email","password","remember","min","response","authForm","graphQLErrors","message","Checkbox","setFieldValue","clientId","process","renderProps","disabled","buttonText","onSuccess","accessToken","authGoogle","onFailure","cookiePolicy","flexShrink","DashboardStyle","StyledRecomendedWorkout","workouts","setWorkouts","suggestionsByExperience","workout","indx","picture","Chart","graphData","changeSlides","forEach","graph","date","toLocaleDateString","Heading","as","Icon","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","domain","strokeDasharray","stroke","fillOpacity","fill","StyledCharts","Charts","graphs","slideIndex","n","showSlides","i","slides","document","getElementsByClassName","display","StyledChart","quotesData","quote","randomQuote","StyledQuotes","Quotes","setQuote","interval","setInterval","clearInterval","fontFamily","textAlign","StyledStreak","Streak","streak","emoji","aria-label","dashboardData","setDashboardData","dashboard","console","log","marginBottom","user","Avatar","photo","marginLeft","borderTop","borderBottom","d","flexDirection","borderLeft","signupSuccess","setSignupSuccess","lastname","confirmpassword","matches","when","is","val","oneOf","rePassword","WorkoutsStyleList","WorkoutsStyle","WorkoutStyle","WorkoutDetailStyle","CustomWorkoutStyleDetail","withRouter","cardQuery","setLimitedWorkouts","intensity","types","pic","defaultPicture","ButtonGroup","e","editCustomWorkout","leftIcon","workoutId","remove","exercises","w","workoutName","workoutQuery","search","setData","setError","limitedWorkouts","limit","setLimit","fields","limitWorkouts","loadMore","newLimit","item","StyledSearch","Search","setSearch","inputSearch","target","s","WorkoutList","debouncedSearch","SideTitle","heading","subheading","Text","DetailList","label","minWidth","Divider","StyledTimer","p","Timer","time","seconds","String","padStart","minutes","renderTime","Calendar","setDate","setCalendarDate","moment","format","StyledTime","Time","setTime","hour","setHour","minute","setMinute","zone","setZone","newTime","setCurrentZone","newZone","newHour","parseInt","newMinute","HistoryStyle","ModalFooter","ModalContentArea","WorkoutHistoryCard","StyledWorkoutItems","timerExercise","setTimerExercise","getExerciseIndexById","setWorkout","start","setStart","pause","setPause","stop","setStop","reminder","setReminder","routine","setRoutine","useDisclosure","isOpen","onOpen","onClose","currTime","setCurrTime","beep","useRef","getCurrentExercise","handlePause","currentExercise","userId","exerciseId","exerciseTimer","session","workoutSession","handleStop","end","updateTimer","t","current","load","play","currIndex","scrollTimeout","accordionItem","getElementById","y","getBoundingClientRect","pageYOffset","scrollTo","behavior","startDate","endDate","volume","preload","crossOrigin","BEEP_WAV","BEEP_OGG","BEEP_MP3","FaCircle","FaPlayCircle","FaPause","FaStopCircle","Modal","blockScrollOnMount","dateTime","startTime","getTime","reminderTime","mr","match","useRouteMatch","Object","exercise","indexOf","params","avgTime","muscles","marginY","marginTop","Accordion","index","_expanded","pictureOne","fontWeight","Stack","spacing","muscle","pb","url","video","controls","ExerciseListStyle","ExercisesStyle","ExerciseDetailStyle","ExerciseStyle","Exercise","rating","exerciseQuery","exerciseName","setExercises","limitedExercises","setLimitedExercises","limitExercises","sort","a","b","parseFloat","ExerciseList","setExercise","difficulty","StyledNavigation","StyledLinks","placement","pathname","Drawer","borderBottomWidth","dateCompleted","DefaultImage","uploadId","setUploadId","uploadFile","setUploadFile","completedWorkouts","onOpenUpload","fontSize","file","files","preventDefault","sessionId","updateCompletedWorkout","ScheduleStyle","schedule","setSchedule","newSchedule","userSchedule","defaultView","plugins","interactionPlugin","timeGridPlugin","events","selectable","successfulRecovery","setSuccessfulRecovery","formikReset","context","headers","authorization","ModalPopup","children","updatedData","setUpdatedData","reminderType","updateUser","paddingTop","isInvalid","alignItems","FormLabel","htmlFor","Switch","event","checked","setUserData","onSave","paddingLeft","paddingY","IoIosPerson","IoIosMail","IoIosFitness","IoIosTrendingUp","rounded","searchExercise","setSearchExercise","selectedExercises","setSelectedExercises","enableReinitialize","removeExercise","ex","ex_id","exerciseSearch","promises","Promise","all","workoutRes","exercisesRes","InputGroup","Textarea","autoComplete","onMouseLeave","includes","find","StyledFooter","footer","href","REACT_APP_GOOGLE_ANALYTICS_KEY","REACT_APP_GraphQL_API","ReactGA","initialize","pageview","cache","InMemoryCache","dataIdFromObject","object","link","createUploadLink","uri","fetchOptions","authLink","setContext","_","ApolloClient","concat","createHashHistory","App","cordova","ThemeProvider","theme","fonts","body","CSSReset","data-testid","exact","Login","AccountRecovery","ProfilePage","Exercises","ExerciseDetail","Onboarding","SignUp","Dashboard","ScheduleDetail","WorkoutDetail","CustomWorkoutDetail","WorkoutHistory","Boolean","hostname","renderReactDom","ReactDOM","addEventListener","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f661413.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4faad313.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.aa29a244.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ElectronicChimeKevanGC.b2a5951b.wav\";","module.exports = __webpack_public_path__ + \"static/media/ElectronicChimeKevanGC.7b3f493b.ogg\";","module.exports = __webpack_public_path__ + \"static/media/ElectronicChimeKevanGC.972c97d9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/login_image.c4394dab.png\";","import { useState, useEffect } from \"react\";\nimport jwtDecode from \"jwt-decode\";\n\nexport const isLoggedIn = () => {\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n  if (!userData) {\n    return false;\n  }\n\n  if (userData.token) {\n    const decodedToken = jwtDecode(userData.token);\n\n    const currentTime = Date.now() / 1000;\n\n    if (decodedToken.exp < currentTime) {\n      // Logout user\n      localStorage.removeItem(\"userData\");\n      return false;\n    }\n    return true;\n  }\n\n  return false;\n};\n\nexport const getUserDetails = () => {\n  const userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n  if (!userData) {\n    return null;\n  }\n\n  if (userData.token) {\n    const { id, exp, firstname } = jwtDecode(userData.token);\n\n    const currentTime = Date.now() / 1000;\n\n    if (exp < currentTime) {\n      // Logout user\n      localStorage.removeItem(\"userData\");\n      return null;\n    }\n    return {\n      token: userData.token,\n      user_id: id,\n      isNewUser: userData.isNewUser,\n      firstname\n    };\n  }\n};\n\nexport const isNewUser = () => {\n  try {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (!userData) {\n      return null;\n    }\n\n    return userData.isNewUser;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const userOnboardedSuccessfully = () => {\n  try {\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (!userData) {\n      return false;\n    }\n\n    if (userData.isNewUser) {\n      userData.isNewUser = false;\n    }\n    localStorage.setItem(\"userData\", JSON.stringify(userData));\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const useDebounce = (value, timeout) => {\n  const [state, setState] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setState(value), timeout);\n    return () => clearTimeout(handler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n  return state;\n};\n\nexport const generateRandomItem = array => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n","import React from \"react\";\nimport { Input as ChakraInput } from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst CustomStyledInput = styled.div`\n  margin: 1rem 0;\n  width: 100%;\n\n  input {\n    border: 1.5px solid rgba(0, 0, 0, 0.25);\n    border-radius: 0;\n    padding: 1.7rem;\n  }\n  span {\n    color: red;\n  }\n`;\n\nfunction Input({\n  id,\n  name,\n  placeholder,\n  variant,\n  type,\n  onChange,\n  value,\n  error,\n  onBlur,\n  touchedName\n}) {\n  return (\n    <CustomStyledInput>\n      <ChakraInput\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        variant={variant}\n        type={type}\n        onChange={onChange}\n        value={value}\n        bg=\"#FFFCF2\"\n        _hover=\"black\"\n        focusBorderColor=\"#FF8744\"\n        errorBorderColor=\"crimson\"\n        onBlur={onBlur}\n        touchedName\n      />\n      {touchedName && error ? <span>{error}</span> : null}\n    </CustomStyledInput>\n  );\n}\n\nexport default Input;\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  value: PropTypes.any,\n  touchedName: PropTypes.bool,\n  onBlur: PropTypes.func\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { generateRandomItem } from \"../../utils\";\n\nconst StyledPreview = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  @media (max-width: 900px) {\n    display: none;\n  }\n\n  .view {\n    height: 100%;\n    width: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n    object-fit: cover;\n  }\n\n  .content {\n    display: flex;\n    padding: 3rem 3rem;\n    align-items: center;\n    h2 {\n      color: white;\n      text-transform: uppercase;\n      font-weight: bolder;\n    }\n\n    i {\n      color: white;\n      padding-right: 1rem;\n    }\n  }\n`;\nconst previewData = [\n  {\n    id: \"1\",\n    preview:\n      \"https://images.unsplash.com/photo-1567598317136-3cd762432241?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\n  },\n  {\n    id: \"2\",\n    preview:\n      \"https://images.unsplash.com/photo-1576511420196-44fe62d67910?ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80\"\n  },\n  {\n    id: \"3\",\n    preview:\n      \"https://images.unsplash.com/photo-1542990254-6a8126153b7a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\"\n  },\n  {\n    id: \"4\",\n    preview:\n      \"https://images.unsplash.com/photo-1483721310020-03333e577078?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1700&q=80\"\n  },\n  {\n    id: \"5\",\n    preview:\n      \"https://images.unsplash.com/photo-1434682772747-f16d3ea162c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1653&q=80\"\n  },\n  {\n    id: \"6\",\n    preview:\n      \"https://images.unsplash.com/photo-1538805060514-97d9cc17730c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=668&q=80\"\n  },\n  {\n    id: \"7\",\n    preview:\n      \"https://images.unsplash.com/photo-1466761366829-84fd59a22e0b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1651&q=80\"\n  }\n];\n\nlet randomPreview = generateRandomItem(previewData);\n\nconst Preview = ({ pageName }) => {\n  return (\n    <StyledPreview>\n      <div\n        className=\"view\"\n        style={{\n          backgroundImage: `url(${randomPreview.preview})`\n        }}\n      >\n        <div className=\"content\">\n          <h2>{pageName}</h2>\n        </div>\n      </div>\n    </StyledPreview>\n  );\n};\n\nexport default Preview;\n\nPreview.propTypes = {\n  pageName: PropTypes.string.isRequired\n};\n","import styled from \"styled-components\";\n\nconst AuthStyle = styled.div`\n  width: 100%;\n  height: 100vh;\n  color: black;\n  background-color: white;\n\n  .auth-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n\n  .auth-banner {\n    width: 45%;\n\n    @media only screen and (max-width: 850px) {\n      display: none;\n    }\n\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .auth-form {\n    width: 50%;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    padding: 0 4rem;\n\n    @media only screen and (max-width: 1300px) {\n      width: 54%;\n      text-align: center;\n    }\n\n    @media only screen and (max-width: 900px) {\n      width: 100%;\n      text-align: center;\n    }\n\n    @media only screen and (max-width: 350px) {\n      padding: 0 1rem;\n    }\n\n    span {\n      color: red;\n    }\n\n    .logo {\n      width: 100%;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n      margin-top: 2rem;\n      @media only screen and (max-width: 900px) {\n        justify-content: center;\n      }\n    }\n\n    form {\n      height: auto;\n      width: 100%;\n      text-align: left;\n      padding: 2rem;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      margin-top: 2rem;\n      align-items: center;\n\n      @media only screen and (max-width: 900px) {\n        margin-top: 0;\n        align-items: center;\n        justify-content: flex-start;\n        padding: 0;\n      }\n\n      a {\n        display: flex;\n        width: 100%;\n        font-size: 16px;\n        margin-top: 1rem;\n        color: #d84727;\n\n        a:hover {\n          color: grey;\n        }\n      }\n\n      .link-recovery {\n        color: grey;\n\n        a:hover {\n          color: #d84727;\n        }\n      }\n\n      .checkbox {\n        display: flex;\n        width: 100%;\n      }\n\n      p {\n        width: 100%;\n      }\n\n      h2 {\n        font-family: ubuntu;\n        font-weight: bold;\n        margin-bottom: 2rem;\n        font-size: 1.875rem;\n        text-align: left;\n        width: 100%;\n\n        @media only screen and (max-width: 800px) {\n          text-align: center;\n          margin-bottom: 1rem;\n        }\n      }\n\n      h3 {\n        font-family: roboto;\n        margin-bottom: 2rem;\n        font-size: 1.1rem;\n        text-align: left;\n        width: 100%;\n\n        @media only screen and (max-width: 800px) {\n          text-align: center;\n          margin-bottom: 1rem;\n        }\n      }\n\n      .body-status {\n        display: flex;\n        flex-wrap: wrap;\n        width: 100%;\n        flex-direction: column;\n        margin-bottom: 1rem;\n\n        @media only screen and (max-width: 356px) {\n          padding: 0;\n        }\n\n        p {\n          padding: 1rem 0;\n        }\n      }\n\n      .auth-form-button {\n        width: 100%;\n        margin: 1rem 0;\n        @media only screen and (max-width: 800px) {\n          padding: 1rem;\n        }\n      }\n\n      .auth-linked-profiles {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        @media only screen and (max-width: 1100px) {\n          flex-direction: column;\n        }\n\n        @media only screen and (max-width: 900px) {\n          flex-direction: row;\n        }\n\n        @media only screen and (max-width: 800px) {\n          flex-direction: column;\n        }\n\n        button {\n          @media only screen and (max-width: 1300px) {\n            font-size: 1rem;\n          }\n\n          @media only screen and (max-width: 1100px) {\n            margin: 1rem 0;\n            width: 100%;\n          }\n\n          @media only screen and (max-width: 900px) {\n            width: 45%;\n          }\n\n          @media only screen and (max-width: 800px) {\n            margin: 1rem 0;\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthStyle;\n","import React from \"react\";\nimport { Select as ChakraSelect } from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nconst CustomStyledSelect = styled.div`\n  margin: 1rem 0;\n  width: 100%;\n\n  select {\n    display: block;\n    font-size: 16px;\n    outline: none;\n    color: #a3b1c2;\n    line-height: 1.3;\n    box-sizing: border-box;\n    -webkit-appearance: none;\n    background-color: #fffcf2;\n    background-size: 3em, 100%;\n    height: auto;\n    padding: 1.3rem;\n    border-style: solid;\n    border-radius: 0;\n    background-repeat: no-repeat, repeat;\n    border: 1.5px solid rgba(0, 0, 0, 0.25);\n  }\n  span {\n    color: red;\n  }\n`;\n\nconst Select = ({\n  options,\n  name,\n  onChange,\n  placeholder,\n  error,\n  value,\n  onBlur,\n  touchedName\n}) => {\n  return (\n    <CustomStyledSelect>\n      <ChakraSelect\n        name={name}\n        onChange={onChange}\n        className=\"dropdown\"\n        placeholder={placeholder}\n        value={value}\n        bg=\"#FFFCF2\"\n        _hover=\"black\"\n        focusBorderColor=\"#FF8744\"\n        errorBorderColor=\"crimson\"\n        onBlur={onBlur}\n        touchedName\n      >\n        {options.map(option => (\n          <option key={option.text} value={option.value}>\n            {option.text}\n          </option>\n        ))}\n      </ChakraSelect>\n      {touchedName && error ? <span>{error}</span> : null}\n    </CustomStyledSelect>\n  );\n};\n\nexport default Select;\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  value: PropTypes.string,\n  touchedName: PropTypes.bool,\n  onBlur: PropTypes.func\n};\n\nSelect.defaultProps = {\n  options: []\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport LogoImage from \"../../assets/logo.png\";\n\nimport { isLoggedIn } from \"../../utils\";\n\nconst StyledLogo = styled.div`\n  img {\n    width: 150px;\n  }\n`;\n\nconst isSignedIn = isLoggedIn();\n\nlet route = \"/\";\n\nif (isSignedIn === false) {\n  route = \"/login\";\n}\n\nconst Logo = () => {\n  return (\n    <StyledLogo>\n      <Link to={route}>\n        <img src={LogoImage} alt=\"Logo\" />\n      </Link>\n    </StyledLogo>\n  );\n};\n\nexport default Logo;\n","import { gql } from \"apollo-boost\";\n\nexport const SIGNUP_MUTATION = gql`\n  mutation addUser(\n    $firstname: String!\n    $lastname: String!\n    $email: String!\n    $password: String!\n    $rePassword: String!\n  ) {\n    addUser(\n      input: {\n        firstname: $firstname\n        lastname: $lastname\n        email: $email\n        password: $password\n        rePassword: $rePassword\n      }\n    ) {\n      id\n      token\n      isNewUser\n    }\n  }\n`;\n\nexport const GOOGLE_AUTH_MUTATION = gql`\n  mutation authGoogle($accessToken: String!) {\n    authGoogle(input: { accessToken: $accessToken }) {\n      id\n      token\n      isNewUser\n    }\n  }\n`;\n\nexport const ONBOARDING = gql`\n  mutation updateUser(\n    $heightUnit: String!\n    $weightUnit: String!\n    $goal: String!\n    $experience: String!\n    $equipment: Boolean!\n    $height: Float!\n    $weight: Float!\n  ) {\n    updateUser(\n      input: {\n        heightUnit: $heightUnit\n        weightUnit: $weightUnit\n        goal: $goal\n        experience: $experience\n        equipment: $equipment\n        height: $height\n        weight: $weight\n      }\n    ) {\n      firstname\n      lastname\n      email\n      height\n      heightUnit {\n        id\n        name\n      }\n      weight\n      weightUnit {\n        id\n        name\n      }\n      goal\n      equipment\n      experience\n    }\n  }\n`;\n\nexport const UPLOAD_PROGRESS_PICTURE = gql`\n  mutation($sessionId: String!, $file: Upload!) {\n    updateCompletedWorkout(input: { sessionId: $sessionId, file: $file }) {\n      id\n      picture\n    }\n  }\n`;\n\nexport const START_WORKOUT = gql`\n  mutation workoutSession(\n    $userId: String!\n    $workoutId: String!\n    $exerciseId: String!\n    $exerciseTimer: Float!\n  ) {\n    workoutSession(\n      input: {\n        userId: $userId\n        workoutId: $workoutId\n        exerciseId: $exerciseId\n        exerciseTimer: $exerciseTimer\n      }\n    ) {\n      userId\n      workoutId {\n        id\n        name\n      }\n      startDate\n      endDate\n      pause\n    }\n  }\n`;\n\nexport const PAUSE_WORKOUT = gql`\n  mutation workoutSession(\n    $userId: String!\n    $workoutId: String!\n    $exerciseId: String!\n    $exerciseTimer: Float!\n    $pause: Boolean!\n  ) {\n    workoutSession(\n      input: {\n        userId: $userId\n        workoutId: $workoutId\n        exerciseId: $exerciseId\n        exerciseTimer: $exerciseTimer\n        pause: $pause\n      }\n    ) {\n      startDate\n      endDate\n      pause\n    }\n  }\n`;\n\nexport const END_WORKOUT = gql`\n  mutation workoutSession(\n    $userId: String!\n    $workoutId: String!\n    $exerciseId: String!\n    $exerciseTimer: Float!\n    $end: Boolean!\n  ) {\n    workoutSession(\n      input: {\n        userId: $userId\n        workoutId: $workoutId\n        exerciseId: $exerciseId\n        exerciseTimer: $exerciseTimer\n        end: $end\n      }\n    ) {\n      userId\n      workoutId {\n        id\n        name\n      }\n      startDate\n      endDate\n      pause\n    }\n  }\n`;\n\nexport const SCHEDULE_WORKOUT = gql`\n  mutation scheduleWorkout(\n    $workoutId: String!\n    $startDate: Float!\n    $reminderTime: Float!\n    $routine: String!\n  ) {\n    scheduleWorkout(\n      input: {\n        workoutId: $workoutId\n        startDate: $startDate\n        reminderTime: $reminderTime\n        routine: $routine\n      }\n    ) {\n      id\n      userId\n      workoutId {\n        id\n      }\n      startDate\n      routine\n    }\n  }\n`;\n\nexport const UPSERT_CUSTOM_WORKOUT = gql`\n  mutation customWorkout(\n    $workoutId: String\n    $name: String!\n    $description: String!\n    $intensity: String!\n    $exercises: [String!]!\n  ) {\n    customWorkout(\n      input: {\n        workoutId: $workoutId\n        name: $name\n        description: $description\n        intensity: $intensity\n        exercises: $exercises\n      }\n    ) {\n      id\n      userId\n      avgTime\n      experience\n      intensity\n      muscles\n      types\n      picture\n      exercises {\n        id\n        name\n        type\n        difficulty\n      }\n    }\n  }\n`;\n\nexport const DELETE_CUSTOM_WORKOUT = gql`\n  mutation customWorkout(\n    $workoutId: String!\n    $remove: Boolean!\n    $name: String!\n    $description: String!\n    $intensity: String!\n    $exercises: [String!]!\n  ) {\n    customWorkout(\n      input: {\n        workoutId: $workoutId\n        remove: $remove\n        name: $name\n        description: $description\n        intensity: $intensity\n        exercises: $exercises\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const UPDATE_USER_DETAILS = gql`\n  mutation updatedUser(\n    $firstname: String\n    $lastname: String\n    $height: Float\n    $heightUnit: String\n    $weightUnit: String\n    $weight: Float\n    $goal: String\n    $equipment: Boolean\n    $experience: String\n    $reminderType: String\n  ) {\n    updateUser(\n      input: {\n        firstname: $firstname\n        lastname: $lastname\n        height: $height\n        heightUnit: $heightUnit\n        weightUnit: $weightUnit\n        weight: $weight\n        goal: $goal\n        equipment: $equipment\n        experience: $experience\n        reminderType: $reminderType\n      }\n    ) {\n      id\n      firstname\n      email\n      lastname\n      height\n      reminderType\n      heightUnit {\n        id\n        name\n        type\n      }\n      goal\n      weight\n      weightUnit {\n        id\n        name\n        type\n      }\n      equipment\n      experience\n      photo\n    }\n  }\n`;\n\nexport const RESET_PASSWORD = gql`\n  mutation resetPassword($password: String!, $rePassword: String!) {\n    resetPassword(input: { password: $password, rePassword: $rePassword }) {\n      id\n      firstname\n      lastname\n    }\n  }\n`;\n\nexport const SEND_MESSAGE = gql`\n  mutation sendMessage($receiver: String!, $message: String!) {\n    sendMessage(receiver: $receiver, message: $message) {\n      sender\n      receiver\n      message\n      sent\n    }\n  }\n`;\n\nexport const MANAGE_FRIENDS = gql`\n  mutation manageFriends($userId: String!, $task: String!) {\n    manageFriends(userId: $userId, task: $task)\n  }\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const LOGIN_QUERY = gql`\n  query authForm($email: String!, $password: String!, $remember: Boolean!) {\n    authForm(\n      input: { email: $email, password: $password, remember: $remember }\n    ) {\n      id\n      token\n      isNewUser\n    }\n  }\n`;\n\nexport const GET_UNITS = gql`\n  query {\n    units {\n      id\n      name\n      type\n    }\n  }\n`;\n\nexport const GET_COMPLETED_WORKOUTS = gql`\n  query {\n    completedWorkouts {\n      userId\n      workoutId {\n        id\n        name\n        intensity\n        avgTime\n        session {\n          startDate\n          endDate\n        }\n      }\n      startDate\n      endDate\n      pause\n    }\n  }\n`;\n\nexport const GET_WORKOUTS = gql`\n  query {\n    workouts {\n      name\n      intensity\n      types\n      id\n      picture\n    }\n  }\n`;\n\nexport const GET_WORKOUTS_BY_FIELDS = gql`\n  query($search: String!, $fields: [String!]!) {\n    workouts(input: { search: $search, fields: $fields }) {\n      id\n      name\n      types\n      intensity\n      picture\n    }\n  }\n`;\n\nexport const GET_WORKOUT_DETAIL = gql`\n  query($id: String!) {\n    workout(id: $id) {\n      name\n      intensity\n      types\n      id\n      description\n      avgTime\n      equipment\n      session {\n        startDate\n        endDate\n        pause\n        exerciseId\n        exerciseTimer\n      }\n      muscles\n      picture\n      exercises {\n        id\n        video\n        difficulty\n        pictureOne\n        pictureTwo\n        rating\n        equipment\n        type\n        description\n        muscle\n        name\n        time\n      }\n    }\n  }\n`;\n\nexport const GET_EXERCISES = gql`\n  query {\n    exercises {\n      id\n      video\n      difficulty\n      pictureOne\n      pictureTwo\n      rating\n      equipment\n      type\n      muscle\n      name\n      time\n    }\n  }\n`;\n\nexport const GET_EXERCISE = gql`\n  query exercise($id: String!) {\n    exercise(id: $id) {\n      id\n      video\n      difficulty\n      pictureOne\n      pictureTwo\n      rating\n      equipment\n      type\n      muscle\n      name\n      description\n    }\n  }\n`;\n\nexport const GET_RECOMMENDED_WORKOUTS = gql`\n  query {\n    suggestionsByExperience {\n      id\n      name\n      picture\n      experience\n    }\n  }\n`;\n\nexport const GET_SCHEDULE = gql`\n  query {\n    userSchedule {\n      id\n      userId\n      workoutId {\n        name\n      }\n      startDate\n      routine\n    }\n  }\n`;\n\nexport const GET_DASHBOARD_DETAILS = gql`\n  query {\n    dashboard {\n      graphs {\n        name\n        data {\n          date\n          value\n        }\n      }\n      stats {\n        reps\n        sets\n        amountLifted\n      }\n      streak\n      user {\n        id\n        firstname\n        goal\n        height\n        weight\n        photo\n        heightUnit {\n          name\n        }\n        weightUnit {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const EXERCISES_BY_FIELDS = gql`\n  query exercises($search: String!, $fields: [String!]!) {\n    exercises(input: { search: $search, fields: $fields }) {\n      id\n      video\n      difficulty\n      pictureOne\n      pictureTwo\n      rating\n      equipment\n      type\n      muscle\n      name\n      time\n    }\n  }\n`;\n\nexport const GET_USER_DETAILS = gql`\n  query {\n    user {\n      firstname\n      lastname\n      equipment\n      height\n      goal\n      photo\n      weight\n      reminderType\n      experience\n      heightUnit {\n        id\n        name\n      }\n      weightUnit {\n        id\n        name\n      }\n      email\n    }\n  }\n`;\n\nexport const ACCOUNT_RECOVERY = gql`\n  query accountRecovery($email: String!) {\n    accountRecovery(input: $email) {\n      id\n      firstname\n      lastname\n    }\n  }\n`;\n\nexport const GET_MESSAGE_HISTORY = gql`\n  query friendChat($receiver: String!) {\n    friendChat(receiver: $receiver) {\n      sender\n      receiver\n      message\n      sent\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query findFriends($search: String!, $fields: [String!]!) {\n    findFriends(input: { search: $search, fields: $fields }) {\n      id\n      firstname\n      lastname\n      email\n      goal\n    }\n  }\n`;\n\nexport const GET_FRIENDS_REQUEST = gql`\n  query {\n    friendRequests {\n      id\n      firstname\n      lastname\n      email\n    }\n  }\n`;\n\nexport const GET_FRIENDS = gql`\n  query {\n    friends {\n      id\n      firstname\n      lastname\n      goal\n      photo\n    }\n  }\n`;\n","import React from \"react\";\nimport { Spinner, Box } from \"@chakra-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction CustomSpinner({ thickness, size, text }) {\n  return (\n    <Box>\n      <Spinner\n        thickness={thickness}\n        emptyColor=\"gray.200\"\n        color=\"orange.400\"\n        size={size}\n      />\n      {text ? <Box ml={3}>{text}</Box> : null}\n    </Box>\n  );\n}\n\n//adding proptypes\nCustomSpinner.propTypes = {\n  thickness: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  text: PropTypes.string\n};\n\nexport default CustomSpinner;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Button, RadioButtonGroup, useToast, Box, Flex } from \"@chakra-ui/core\";\nimport Input from \"../common/Input\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport PropTypes from \"prop-types\";\n\nimport Preview from \"../common/Preview\";\nimport AuthStyle from \"./AuthStyle\";\nimport Select from \"../common/Select\";\nimport Logo from \"../common/Logo\";\nimport { ONBOARDING } from \"../../graphql/mutations\";\nimport { GET_UNITS } from \"../../graphql/queries\";\nimport { getUserDetails, userOnboardedSuccessfully } from \"../../utils\";\nimport { Redirect } from \"react-router-dom\";\nimport CustomSpinner from \"../common/Spinner\";\n\nconst userData = getUserDetails();\n\nconst Onboarding = ({ client, history }) => {\n  const toast = useToast();\n  const [heightUnits, setHeightUnits] = useState([]);\n  const [weightUnits, setWeightUnits] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      goal: \"\",\n      equipment: \"\",\n      experience: \"\",\n      heightUnit: \"\",\n      weightUnit: \"\",\n      height: \"\",\n      weight: \"\"\n    },\n    validationSchema: yup.object().shape({\n      goal: yup.string().required(\"Please select your workout goal\"),\n      equipment: yup.string().required(\"Please select your workout equipment\"),\n      experience: yup\n        .string()\n        .required(\"Please select your workout experience\"),\n      heightUnit: yup\n        .string()\n        .required(\"Please select your workout preferred height unit\"),\n      weightUnit: yup\n        .string()\n        .required(\"Please select your workout preferred weight unit\"),\n      weight: yup.number().required(\"Please enter your weight\"),\n      height: yup.number().required(\"Please enter your height\")\n    }),\n\n    onSubmit: value => {\n      client\n        .mutate({\n          mutation: ONBOARDING,\n          variables: {\n            id: userData.user_id,\n            heightUnit: value.heightUnit,\n            weightUnit: value.weightUnit,\n            goal: value.goal,\n            experience: value.experience,\n            equipment: JSON.parse(value.equipment),\n            weight: value.weight,\n            height: value.height\n          }\n        })\n        .then(res => {\n          userOnboardedSuccessfully(\"yes\");\n          alert(\n            \"Onboarding Completed.\",\n            \"You can now access your dashboard\",\n            \"success\"\n          );\n          history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          alert(\n            \"An error occurred.\",\n            \"Unable to complete onboarding. Please try again\",\n            \"error\"\n          );\n        });\n    }\n  });\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_UNITS\n      })\n      .then(res => {\n        const weightUnit = res.data.units.filter(\n          unit => unit.type === \"weight\"\n        );\n        const heightUnit = res.data.units.filter(\n          unit => unit.type === \"height\"\n        );\n        setHeightUnits(heightUnit);\n        setWeightUnits(weightUnit);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        alert(\n          \"An error occurred.\",\n          \"Unable to complete onboarding. Please reload the page and try again\",\n          \"error\"\n        );\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (userData.isNewUser === false) {\n    alert(\"Onboarding already completed.\", \"Proceed to workout\", \"warning\");\n    return <Redirect to=\"/\" />;\n  }\n\n  const CustomRadio = React.forwardRef((props, ref) => {\n    const { isChecked, name, isDisabled, value, onClick, ...rest } = props;\n    return (\n      <>\n        <Button\n          ref={ref}\n          name={name}\n          color={isChecked ? \"#ff8744\" : \"#CCC5B9\"}\n          borderColor={isChecked ? \"#ff8744\" : \"#CCC5B9\"}\n          aria-checked={isChecked}\n          role=\"radio\"\n          isDisabled={isDisabled}\n          value={value}\n          onClick={onClick}\n          {...rest}\n        />\n      </>\n    );\n  });\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n  return (\n    <AuthStyle>\n      <div className=\"auth-container\">\n        <div className=\"auth-banner\">\n          <Preview pageName=\"Preferences\" />\n        </div>\n\n        <div className=\"auth-form\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <form onSubmit={formik.handleSubmit}>\n            <h2>Preferences</h2>\n\n            <p>What is your height?</p>\n            <Input\n              name=\"height\"\n              error={formik.errors.height}\n              value={formik.values.height}\n              placeholder=\"Enter Height\"\n              onChange={formik.handleChange}\n              type=\"number\"\n              variant=\"filled\"\n              id=\"height\"\n              bg=\"#fffcf2\"\n              focusBorderColor=\"#dd6b20\"\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.height}\n            />\n\n            <div className=\"body-status\">\n              <p>Which height measurement unit do you prefer?</p>\n              <RadioButtonGroup\n                name=\"heightUnit\"\n                className=\"btnGroup\"\n                defaultValue=\"kilogram\"\n                onClick={formik.handleChange}\n                isInline\n                err={formik.errors.heightUnit}\n                value={formik.values.heightUnit}\n                onBlur={formik.handleBlur}\n              >\n                {heightUnits.map(heightUnit => (\n                  <CustomRadio\n                    key={heightUnit.name}\n                    className=\"unitButton\"\n                    value={heightUnit.id}\n                  >\n                    {heightUnit.name.charAt(0).toUpperCase() +\n                      heightUnit.name.slice(1)}\n                  </CustomRadio>\n                ))}\n              </RadioButtonGroup>\n              {formik.touched.heightUnit && formik.errors.heightUnit ? (\n                <span>{formik.errors.heightUnit}</span>\n              ) : null}\n\n              <p>What is your weight?</p>\n              <Input\n                name=\"weight\"\n                error={formik.errors.weight}\n                value={formik.values.weight}\n                onChange={formik.handleChange}\n                placeholder=\"Enter Weight\"\n                variant=\"filled\"\n                id=\"weight\"\n                type=\"number\"\n                bg=\"#fffcf2\"\n                focusBorderColor=\"#dd6b20\"\n                onBlur={formik.handleBlur}\n                touchedName={formik.touched.weight}\n              />\n\n              <p>Which weight measurement unit do you prefer?</p>\n              <RadioButtonGroup\n                name=\"weightUnit\"\n                className=\"btnGroup\"\n                defaultValue=\"rad2\"\n                onClick={formik.handleChange}\n                isInline\n                value={formik.values.weightUnit}\n                error={formik.errors.weightUnit}\n                onBlur={formik.handleBlur}\n              >\n                {weightUnits.map(weightUnit => (\n                  <CustomRadio\n                    key={weightUnit.name}\n                    className=\"unitButton\"\n                    value={weightUnit.id}\n                  >\n                    {weightUnit.name.charAt(0).toUpperCase() +\n                      weightUnit.name.slice(1)}\n                  </CustomRadio>\n                ))}\n              </RadioButtonGroup>\n              {formik.touched.weightUnit && formik.errors.weightUnit ? (\n                <span>{formik.errors.weightUnit}</span>\n              ) : null}\n            </div>\n            <p>What is your fitness goal?</p>\n            <Select\n              name=\"goal\"\n              className=\"dropdown\"\n              placeholder=\"Select a goal\"\n              options={[\n                { value: \"Weight Loss\", text: \"Weight Loss\" },\n                { value: \"Muscle Gain\", text: \"Muscle Gain\" },\n                { value: \"Athletic\", text: \"Athletic\" },\n                { value: \"Healthy\", text: \"Healthy\" }\n              ]}\n              error={formik.errors.goal}\n              value={formik.values.goal}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.goal}\n            />\n\n            <p>How experienced are you working out</p>\n            <Select\n              name=\"experience\"\n              placeholder=\"Select a Level\"\n              options={[\n                { value: \"Beginner\", text: \"Beginner\" },\n                { value: \"Intermediate\", text: \"Intermediate\" },\n                { value: \"Expert\", text: \"Expert\" }\n              ]}\n              error={formik.errors.experience}\n              value={formik.values.experience}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.experience}\n            />\n\n            <p>What workout equipment do you have?</p>\n            <Select\n              name=\"equipment\"\n              className=\"dropdown\"\n              placeholder=\"Select equipment\"\n              options={[\n                { value: \"false\", text: \"None\" },\n                { value: \"true\", text: \"Gym\" }\n              ]}\n              error={formik.errors.equipment}\n              value={formik.values.equipment}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.equipment}\n            />\n\n            <Button\n              type=\"submit\"\n              variantColor=\"orange\"\n              rightIcon=\"arrow-forward\"\n              className=\"auth-form-button\"\n              size=\"lg\"\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </div>\n    </AuthStyle>\n  );\n};\n\nexport default withApollo(Onboarding);\n\nOnboarding.propTypes = {\n  client: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"../../utils\";\nimport { isNewUser } from \"../../utils\";\n\nconst isValidPath = path => {\n  if (path === \"/login\" || path === \"/signup\" || path === \"/onboarding\") {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isSignedIn = isLoggedIn();\n\n  if (isSignedIn) {\n    const onBoarded = isNewUser();\n\n    if (onBoarded === false || isValidPath(rest.path))\n      return <Route {...rest} render={props => <Component {...props} />} />;\n    else {\n      return <Redirect to=\"/onboarding\" />;\n    }\n  } else {\n    return <Redirect to=\"/login\" />;\n  }\n};\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { withApollo } from \"react-apollo\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport Input from \"../common/Input\";\nimport { Button, Checkbox, useToast } from \"@chakra-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { isLoggedIn } from \"../../utils\";\nimport Logo from \"../common/Logo\";\nimport AuthStyle from \"./AuthStyle\";\nimport Preview from \"../common/Preview\";\nimport { GOOGLE_AUTH_MUTATION } from \"../../graphql/mutations\";\nimport { LOGIN_QUERY } from \"../../graphql/queries\";\n\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\nfunction Login({ client, history }) {\n  const toast = useToast();\n  const [loginSuccess, setLoginSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    },\n    validationSchema: yup.object().shape({\n      email: yup\n        .string()\n        .email()\n        .required(\"Please enter your email\"),\n      password: yup\n        .string()\n        .required(\"Please enter your password\")\n        .min(8, \"Must be minimum 8 characters\")\n    }),\n\n    onSubmit: value => {\n      setLoading(true);\n      client\n        .mutate({\n          mutation: LOGIN_QUERY,\n          variables: {\n            email: value.email,\n            password: value.password,\n            remember: value.remember\n          }\n        })\n        .then(response => {\n          const { token, isNewUser } = response.data.authForm;\n          localStorage.setItem(\n            \"userData\",\n            JSON.stringify({ token, isNewUser })\n          );\n          setLoading(false);\n          if (isNewUser === true) {\n            setLoginSuccess(\"/onboarding\");\n            alert(\n              \"Login Successful.\",\n              \"You can now complete the onboarding process\",\n              \"success\"\n            );\n          } else {\n            setLoginSuccess(\"/\");\n            alert(\n              \"Login Successful.\",\n              \"You can now access your dashboard\",\n              \"success\"\n            );\n          }\n        })\n        .catch(error => {\n          setLoading(false);\n          if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n            alert(\n              \"An error occurred.\",\n              error.graphQLErrors[0].message,\n              \"error\"\n            );\n          }\n        });\n    }\n  });\n\n  useEffect(() => {\n    const isSignedIn = isLoggedIn();\n    // if user is already logged in, redirect to dashboard\n    if (isSignedIn === true && loginSuccess === false) {\n      setIsSignedIn(true);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loginSuccess) {\n    history.push(loginSuccess);\n    window.location.reload();\n  }\n\n  // if user is already logged in, redirect to dashboard\n  if (isSignedIn === true) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const responseFailureGoogle = error => {\n    alert(\"An error occurred.\", \"Unable to login to your account.\", \"error\");\n  };\n\n  const responseGoogle = response => {\n    client\n      .mutate({\n        mutation: GOOGLE_AUTH_MUTATION,\n        variables: {\n          accessToken: response.accessToken\n        }\n      })\n      .then(res => {\n        const { token, isNewUser, id } = res.data.authGoogle;\n        localStorage.setItem(\n          \"userData\",\n          JSON.stringify({ token, isNewUser, id })\n        );\n        alert(\n          \"Login Successful.\",\n          \"You can now access your dashboard\",\n          \"success\"\n        );\n\n        if (isNewUser === true) {\n          setLoginSuccess(\"/onboarding\");\n        } else {\n          setLoginSuccess(\"/\");\n        }\n      })\n      .catch(error => {\n        alert(\n          \"An error occurred.\",\n          \"Unable to login to your account.\",\n          \"error\"\n        );\n      });\n  };\n\n  return (\n    <AuthStyle>\n      <div className=\"auth-container\">\n        <div className=\"auth-banner\">\n          <Preview pageName=\"Login\" />\n        </div>\n\n        <div className=\"auth-form\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <form onSubmit={formik.handleSubmit}>\n            <h2>Login</h2>\n\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"EMAIL\"\n              variant=\"filled\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.email}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.email}\n            />\n\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"PASSWORD\"\n              variant=\"filled\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.password}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.password}\n            />\n\n            <div className=\"checkbox\">\n              <Checkbox\n                size=\"md\"\n                variantColor=\"orange\"\n                onChange={() =>\n                  formik.setFieldValue(\"remember\", !formik.values.remember)\n                }\n              >\n                Remember me\n              </Checkbox>\n            </div>\n\n            <Button\n              type=\"submit\"\n              className=\"auth-form-button\"\n              variantColor=\"orange\"\n              rightIcon=\"arrow-forward\"\n              size=\"lg\"\n              isLoading={loading}\n            >\n              Login\n            </Button>\n            <div className=\"auth-linked-profiles\">\n              <GoogleLogin\n                clientId={REACT_APP_GOOGLE_CLIENT_ID}\n                render={renderProps => (\n                  <Button\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    color=\"white\"\n                    bg=\"#4c8bf5\"\n                    rightIcon=\"arrow-forward\"\n                    width=\"45%\"\n                    size=\"lg\"\n                  >\n                    Login with Google\n                  </Button>\n                )}\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseFailureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n              <Button\n                type=\"submit\"\n                variantColor=\"facebook\"\n                flexShrink=\"0\"\n                rightIcon=\"arrow-forward\"\n                size=\"lg\"\n              >\n                Login with Facebook\n              </Button>\n            </div>\n\n            <Link to=\"/accountrecovery\">Forgot Password?</Link>\n            <Link to=\"/signup\" className=\"link-recovery\">\n              Don't have an account?\n            </Link>\n          </form>\n        </div>\n      </div>\n    </AuthStyle>\n  );\n}\n\nexport default withApollo(Login);\n\nLogin.propTypes = {\n  client: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import styled from \"styled-components\";\n\nconst DashboardStyle = styled.div`\n  width: 95vw;\n  margin: 1rem auto;\n  display: flex;\n  flex-wrap: wrap;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  padding: 2rem;\n\n  .welcome {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n\n    h2 {\n      font-size: 1.8rem;\n\n      @media only screen and (max-width: 800px) {\n        font-size: 1.5rem;\n      }\n    }\n  }\n\n  .dashboard-content {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 1085px) {\n      flex-direction: column-reverse;\n      align-items: center;\n    }\n\n    .user-detail {\n      width: 30%;\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: column;\n      box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n      border-radius: 10px;\n      padding: 0.5rem;\n      border: 2px solid grey;\n\n      @media only screen and (max-width: 1085px) {\n        width: 70%;\n        margin: 1rem 0;\n      }\n      @media only screen and (max-width: 900px) {\n        width: 100%;\n        margin: 1rem 0;\n      }\n\n      a {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n      }\n    }\n\n    .dasboard-detail {\n      width: 65%;\n      display: flex;\n      flex-wrap: wrap;\n\n      @media only screen and (max-width: 1085px) {\n        width: 90%;\n      }\n\n      @media only screen and (max-width: 900px) {\n        width: 100%;\n        margin: 1rem 0;\n      }\n\n      .goal {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        p {\n          width: 100%;\n          display: flex;\n          flex-wrap: wrap;\n          color: #ff8744;\n          font-family: Ubuntu;\n          font-style: normal;\n          font-weight: normal;\n        }\n\n        h4 {\n          width: 100%;\n          padding-left: 7rem;\n          font-family: Ubuntu;\n          font-style: normal;\n          font-weight: normal;\n          margin: 0.5rem 0;\n          font-size: 2rem;\n        }\n      }\n\n      .recomended-workouts {\n        display: flex;\n        flex-wrap: wrap;\n        width: 100%;\n\n        p {\n          width: 100%;\n          display: flex;\n          flex-wrap: wrap;\n          color: #ff8744;\n          font-family: Ubuntu;\n          margin: 1rem 0;\n        }\n      }\n    }\n  }\n\n  /* .colorOrange {\n    color: orange;\n  }\n\n  .alignText {\n    text-align: left;\n  }\n\n  .pointer {\n    cursor: pointer;\n    background-color: black;\n    color: white;\n\n    &:hover {\n      background-color: #8884d8;\n      color: black;\n    }\n  }\n\n  .slide {\n    -webkit-animation-name: slide;\n    -webkit-animation-duration: 1.5s;\n    animation-name: slide;\n    animation-duration: 1.5s;\n  }\n\n  .mySlides {\n    display: none;\n\n    section {\n      display: flex;\n      justify-content: flex-end;\n      margin-bottom: 0px;\n    }\n  }\n\n  > div {\n    display: flex;\n\n\n    a {\n      margin-left: 90%;\n    }\n\n    > div {\n      section {\n        margin-bottom: 30px;\n      }\n\n      section:first-child {\n        p {\n\n          width: 100%;\n        }\n      }\n    }\n  } */\n`;\n\nexport default DashboardStyle;\n","import styled from \"styled-components\";\n\nconst StyledRecomendedWorkout = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: space-evenly;\n\n  .recomended-workout-detail {\n    display: flex;\n    flex-wrap: wrap;\n    width: 32%;\n    margin: 1rem 0;\n    @media only screen and (max-width: 1200px) {\n      width: 45%;\n    }\n\n    @media only screen and (max-width: 750px) {\n      width: 65%;\n    }\n\n    @media only screen and (max-width: 600px) {\n      width: 75%;\n    }\n\n    @media only screen and (max-width: 500px) {\n      width: 95%;\n    }\n    img {\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n      height: 200px;\n      width: 100%;\n      border-radius: 10px;\n    }\n  }\n`;\n\nexport default StyledRecomendedWorkout;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { useToast } from \"@chakra-ui/core\";\n\nimport StyledRecomendedWorkout from \"./StyledRecomendedWorkout\";\n\nimport { GET_RECOMMENDED_WORKOUTS } from \"../../graphql/queries\";\n\nconst RecommendedWorkouts = ({ client, history }) => {\n  const [workouts, setWorkouts] = useState([]);\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_RECOMMENDED_WORKOUTS\n      })\n      .then(res => {\n        setWorkouts(res.data.suggestionsByExperience);\n      })\n      .catch(err => {\n        alert(\"An error occurred.\", \"Unable to load\", \"error\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledRecomendedWorkout>\n      {workouts.map((workout, indx) => {\n        while (indx < 3) {\n          return (\n            <div key={workout.id} className=\"recomended-workout-detail\">\n              <Link to={`/workout/${workout.id}`}>\n                <img src={workout.picture} alt={workout.name} />\n              </Link>\n            </div>\n          );\n        }\n        return null;\n      })}\n    </StyledRecomendedWorkout>\n  );\n};\n\nexport default withApollo(RecommendedWorkouts);\n","import React from \"react\";\nimport { Heading, Icon } from \"@chakra-ui/core\";\nimport {\n  AreaChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Area\n} from \"recharts\";\n\nconst Chart = ({ graphData, changeSlides }) => {\n  graphData.data.forEach(\n    graph => (graph.date = new Date(graph.date).toLocaleDateString())\n  );\n\n  return (\n    <div className=\"chart mySlides slide\">\n      {/* <section> */}\n      <Heading className=\"colorOrange\" as=\"h4\" size=\"md\">\n        {graphData.name}\n      </Heading>\n      <div className=\"chart-nav\">\n        <Icon\n          className=\"pointer\"\n          onClick={() => changeSlides(-1)}\n          name=\"chevron-left\"\n          size=\"24px\"\n        />\n        <Icon\n          className=\"pointer\"\n          onClick={() => changeSlides(1)}\n          name=\"chevron-right\"\n          size=\"24px\"\n        />\n      </div>\n      {/* </section> */}\n      <AreaChart\n        width={730}\n        height={250}\n        data={graphData.data}\n        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n      >\n        <defs>\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\n            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\n          </linearGradient>\n        </defs>\n        <XAxis dataKey=\"date\" />\n        <YAxis type=\"number\" domain={[\"dataMin - 20\", \"dataMax + 20\"]} />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Area\n          type=\"monotone\"\n          dataKey=\"value\"\n          stroke=\"#8884d8\"\n          fillOpacity={1}\n          fill=\"url(#colorUv)\"\n        />\n      </AreaChart>\n    </div>\n  );\n};\n\nexport default Chart;\n","import styled from \"styled-components\";\n\nconst StyledCharts = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  .chart {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n\n    .recharts-wrapper {\n      width: 100% !important;\n\n      svg {\n        width: 100%;\n      }\n    }\n    h4 {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-start;\n      color: #ff8744;\n      font-family: Ubuntu;\n      font-style: normal;\n      font-weight: normal;\n      margin: 1rem 0;\n    }\n\n    .chart-nav {\n      margin: 1rem 0;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n      color: #ff8744;\n\n      svg {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nexport default StyledCharts;\n","import React, { useEffect } from \"react\";\nimport Chart from \"./Chart\";\n\nimport StyledCharts from \"./StyledChart\";\n\nconst Charts = ({ graphs }) => {\n  let slideIndex = 1;\n\n  useEffect(() => {\n    showSlides(slideIndex);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function changeSlides(n) {\n    showSlides((slideIndex += n));\n  }\n\n  function showSlides(n) {\n    let i;\n    const slides = document.getElementsByClassName(\"mySlides\");\n    if (n > slides.length) {\n      slideIndex = 1;\n    }\n    if (n < 1) {\n      slideIndex = slides.length;\n    }\n    for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n\n    slides[slideIndex - 1].style.display = \"block\";\n  }\n\n  return (\n    <StyledCharts>\n      {graphs.map(graphData => (\n        <Chart\n          key={graphData.name}\n          graphData={graphData}\n          changeSlides={changeSlides}\n        />\n      ))}\n      <p>Data view</p>\n    </StyledCharts>\n  );\n};\n\nexport default Charts;\n","import React, { useState, useEffect } from \"react\";\nimport { Heading } from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\n\nimport { generateRandomItem } from \"../../utils\";\nconst quotesData = [\n  {\n    id: \"1\",\n    quote:\n      \"The clock is ticking. Are you becoming the person you want to to be?\"\n  },\n  {\n    id: \"2\",\n    quote:\n      \"The last three or four reps is what makes the muscle grow. This area of pain divides a champion from someone who is not a champion\"\n  },\n  {\n    id: \"3\",\n    quote:\n      \"Success usually comes to those who are too busy to be looking for it.\"\n  },\n  {\n    id: \"4\",\n    quote:\n      \"If you think lifting is dangerous, try being weak. Being weak is dangerous.\"\n  },\n  {\n    id: \"5\",\n    quote:\n      \"The only place where success comes before work is in the dictionary.\"\n  },\n  {\n    id: \"6\",\n    quote: \"The clock is ticking. Are you becoming the person you want to be?\"\n  },\n  {\n    id: \"7\",\n    quote: \"Whether you think you can, or you think you can’t, you’re right.\"\n  },\n  {\n    id: \"8\",\n    quote: \"The successful warrior is the average man, with laser-like focus.\"\n  },\n  {\n    id: \"9\",\n    quote: \"You must expect great things of yourself before you can do them.\"\n  },\n  {\n    id: \"10\",\n    quote: \"Action is the foundational key to all success.\"\n  },\n  {\n    id: \"11\",\n    quote:\n      \"Things may come to those who wait, but only the things left by those who hustle.\"\n  },\n  {\n    id: \"12\",\n    quote: \"Well done is better than well said.\"\n  },\n  {\n    id: \"13\",\n    quote: \"Well done is better than well said.\"\n  },\n  {\n    id: \"14\",\n    quote: \"All our dreams can come true if we have the courage to pursue them.\"\n  },\n  {\n    id: \"15\",\n    quote: \"A champion is someone who gets up when they can’t.\"\n  },\n  {\n    id: \"16\",\n    quote: \"What hurts today makes you stronger tomorrow.\"\n  },\n  {\n    id: \"17\",\n    quote:\n      \"If something stands between you and your success, move it. Never be denied.\"\n  },\n  {\n    id: \"18\",\n    quote:\n      \"If you want something you’ve never had, you must be willing to do something you’ve never done.\"\n  },\n  {\n    id: \"19\",\n    quote:\n      \"Success is walking from failure to failure with no loss of enthusiasm.\"\n  },\n  {\n    id: \"20\",\n    quote:\n      \"You have to think it before you can do it. The mind is what makes it all possible.\"\n  }\n];\nlet randomQuote = generateRandomItem(quotesData);\n\nconst StyledQuotes = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  p {\n    background: #fffcf2;\n    padding: 1.5rem;\n    border-radius: 10px;\n    transition: all 0.2s ease-in-out;\n    font-weight: bolder;\n  }\n`;\n\nconst Quotes = () => {\n  const [quote, setQuote] = useState(randomQuote);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      randomQuote = quotesData[Math.floor(Math.random() * quotesData.length)];\n      setQuote(randomQuote);\n    }, 5000);\n\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledQuotes>\n      <Heading fontFamily=\"initial\" textAlign=\"left\" className=\"alignText\">\n        “\n      </Heading>\n      <p>{quote.quote}</p>\n\n      <Heading fontFamily=\"initial\" textAlign=\"right\" width=\"100%\">\n        ”\n      </Heading>\n    </StyledQuotes>\n  );\n};\n\nexport default Quotes;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledStreak = styled.div`\n  color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 25rem 2rem 0 2rem;\n  padding: 1rem 5rem;\n  border-radius: 1rem;\n`;\n\nconst Streak = ({ streak }) => {\n  let message = \"Fantastic, Great work!\";\n  let emoji = \"🚀🚀🚀\";\n  let className = \"high\";\n\n  if (streak < 5) {\n    message = \"You can do better!!\";\n    emoji = \"😔😕🥺😢😭\";\n    className = \"low\";\n  }\n\n  if (streak > 5 && streak < 10) {\n    message = \"Keep it up!\";\n    emoji = \"🔥🔥🔥\";\n    className = \"moderate\";\n  }\n\n  return (\n    <StyledStreak className={className}>\n      <span role=\"img\" aria-label=\"fire-emoji\">\n        {emoji}\n      </span>{\" \"}\n      You have a {streak} days streak. {message}\n    </StyledStreak>\n  );\n};\n\nexport default Streak;\n","import React, { useEffect, useState } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Flex, Box, Heading, Avatar, useToast } from \"@chakra-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport DashboardStyle from \"./DashboardStyle\";\nimport RecommendedWorkouts from \"./RecommendedWorkouts\";\nimport Charts from \"./Charts\";\nimport { GET_DASHBOARD_DETAILS } from \"../../graphql/queries\";\nimport CustomSpinner from \"../common/Spinner\";\nimport Quotes from \"../common/Quotes\";\nimport Streak from \"../common/Streak\";\n\nfunction Dashboard({ client, history }) {\n  const [dashboardData, setDashboardData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_DASHBOARD_DETAILS\n      })\n      .then(res => {\n        setDashboardData(res.data.dashboard);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        alert(\"An error occurred.\", \"Unable to load\", \"error\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  if (dashboardData) {\n    console.log(dashboardData);\n    return (\n      <DashboardStyle>\n        <div className=\"welcome\">\n          <Heading marginBottom=\"25px\" textAlign=\"left\">\n            Hello {dashboardData.user.firstname}! Welcome to Workout Tracker ...\n          </Heading>\n        </div>\n\n        <div className=\"dashboard-content\">\n          <div className=\"user-detail\">\n            <Link to=\"/profile\">Edit</Link>\n            <Avatar\n              src={dashboardData.user.photo}\n              size=\"2xl\"\n              marginLeft=\"35%\"\n              marginBottom=\"20px\"\n            />\n            <Flex borderTop=\"1px solid grey\" borderBottom=\"1px solid grey\">\n              <Box width=\"50%\" d=\"flex\" flexDirection=\"column\">\n                <p className=\"colorOrange\">Weight</p>\n                <p>\n                  {dashboardData.user.weight}\n                  {dashboardData.user.weightUnit.name}\n                </p>\n              </Box>\n              <Box\n                width=\"50%\"\n                d=\"flex\"\n                flexDirection=\"column\"\n                borderLeft=\"1px solid grey\"\n              >\n                <p className=\"colorOrange\">Height</p>\n                <p>\n                  {dashboardData.user.height}\n                  {dashboardData.user.heightUnit.name}\n                </p>\n              </Box>\n            </Flex>\n\n            <Streak streak={dashboardData.streak} />\n          </div>\n\n          <div className=\"dasboard-detail\">\n            <Quotes />\n\n            <section className=\"goal\">\n              <p>Goal</p>\n              <Heading as=\"h4\" size=\"md\">\n                {dashboardData.user.goal}\n              </Heading>\n            </section>\n            <section className=\"recomended-workouts\">\n              <p className=\"colorOrange alignText\">Recommended Workouts</p>\n              <RecommendedWorkouts />\n            </section>\n\n            <Charts graphs={dashboardData.graphs} />\n          </div>\n        </div>\n      </DashboardStyle>\n    );\n  }\n\n  return (\n    <Box>\n      <Flex width=\"100vw\" height=\"100vh\" justifyContent=\"center\" align=\"center\">\n        <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n      </Flex>\n    </Box>\n  );\n}\n\nexport default withApollo(Dashboard);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { withApollo } from \"react-apollo\";\nimport GoogleLogin from \"react-google-login\";\nimport { Button, useToast } from \"@chakra-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport { isLoggedIn } from \"../../utils\";\nimport Input from \"../common/Input\";\nimport Logo from \"../common/Logo\";\nimport Preview from \"../common/Preview\";\nimport AuthStyle from \"./AuthStyle\";\nimport { GOOGLE_AUTH_MUTATION, SIGNUP_MUTATION } from \"../../graphql/mutations\";\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\nfunction SignUp({ client, history }) {\n  const [signupSuccess, setSignupSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    },\n    validationSchema: yup.object().shape({\n      firstname: yup.string().required(\"Please enter your First name\"),\n      lastname: yup.string().required(\"Please enter your Last name\"),\n      email: yup\n        .string()\n        .email()\n        .required(\"Please enter your email\"),\n      password: yup\n        .string()\n        .required(\"Please enter your password\")\n        .matches(\n          /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n          \"Password must contain 8 characters, one uppercase, one lowercase, one number and one special case character\"\n        ),\n      confirmpassword: yup\n        .string()\n        .required(\"Please confirm your password\")\n        .when(\"password\", {\n          is: val => (val && val.length > 0 ? true : false),\n          then: yup\n            .string()\n            .oneOf(\n              [yup.ref(\"password\")],\n              \"Needs to be the same as password value\"\n            )\n        })\n    }),\n\n    onSubmit: value => {\n      setLoading(true);\n      client\n        .mutate({\n          mutation: SIGNUP_MUTATION,\n          variables: {\n            firstname: value.firstname,\n            lastname: value.lastname,\n            password: value.password,\n            rePassword: value.confirmpassword,\n            email: value.email\n          }\n        })\n        .then(() => {\n          alert(\n            \"Sign up Successful.\",\n            \"Login with account details.\",\n            \"success\"\n          );\n          setLoading(false);\n          history.push(\"/login\");\n        })\n        .catch(error => {\n          setLoading(false);\n          alert(\"Error Sigin you up\", error.graphQLErrors[0].message, \"error\");\n        });\n    }\n  });\n\n  if (signupSuccess) {\n    history.push(signupSuccess);\n    window.location.reload();\n  }\n\n  // if user is already logged in, redirect to dashboard\n  const isSignedIn = isLoggedIn();\n  if (isSignedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const responseFailureGoogle = error => {\n    alert(\"An error occurred.\", \"Unable to signup your account.\", \"error\");\n  };\n\n  const responseGoogle = response => {\n    client\n      .mutate({\n        mutation: GOOGLE_AUTH_MUTATION,\n        variables: {\n          accessToken: response.accessToken\n        }\n      })\n      .then(res => {\n        const { token, isNewUser } = res.data.authGoogle;\n        localStorage.setItem(\"userData\", JSON.stringify({ token, isNewUser }));\n        if (isNewUser === true) {\n          setSignupSuccess(\"/onboarding\");\n        } else {\n          setSignupSuccess(\"/\");\n        }\n\n        alert(\n          \"Sign up Successful.\",\n          \"We've created your account for you.\",\n          \"success\"\n        );\n      })\n      .catch(() => {\n        alert(\"An error occurred.\", \"Unable to signup your account.\", \"error\");\n      });\n  };\n\n  return (\n    <AuthStyle>\n      <div className=\"auth-container\">\n        <div className=\"auth-banner\">\n          <Preview pageName=\"Sign up\" />\n        </div>\n        <div className=\"auth-form\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n          <form onSubmit={formik.handleSubmit}>\n            <h2>Sign up</h2>\n            <Input\n              id=\"firstname\"\n              name=\"firstname\"\n              placeholder=\"FIRSTNAME\"\n              variant=\"filled\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.firstname}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.firstname}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.firstname}\n            />\n\n            <Input\n              id=\"lastname\"\n              name=\"lastname\"\n              placeholder=\"LASTNAME\"\n              variant=\"filled\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.lastname}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.lastname}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.lastname}\n            />\n\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"EMAIL\"\n              variant=\"filled\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.email}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.email}\n            />\n\n            <Input\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"PASSWORD\"\n              variant=\"filled\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.password}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.password}\n            />\n\n            <Input\n              id=\"confirmpassword\"\n              name=\"confirmpassword\"\n              placeholder=\"CONFIRM PASSWORD\"\n              variant=\"filled\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              value={formik.values.confirmpassword}\n              bg=\"#FFFCF2\"\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.confirmpassword}\n              onBlur={formik.handleBlur}\n              touchedName={formik.touched.confirmpassword}\n            />\n\n            <Button\n              type=\"submit\"\n              className=\"auth-form-button\"\n              variantColor=\"orange\"\n              rightIcon=\"arrow-forward\"\n              size=\"lg\"\n              isLoading={loading}\n            >\n              Sign up\n            </Button>\n            <div className=\"auth-linked-profiles\">\n              <GoogleLogin\n                clientId={REACT_APP_GOOGLE_CLIENT_ID}\n                render={renderProps => (\n                  <Button\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    color=\"white\"\n                    bg=\"#4C8BF5\"\n                    rightIcon=\"arrow-forward\"\n                    width=\"45%\"\n                    size=\"lg\"\n                  >\n                    Sign Up with Google\n                  </Button>\n                )}\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseFailureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n\n              <Button\n                type=\"submit\"\n                variantColor=\"facebook\"\n                rightIcon=\"arrow-forward\"\n                size=\"lg\"\n                width=\"45%\"\n              >\n                Facebook\n              </Button>\n            </div>\n            <Link to=\"/login\">Already have an account?</Link>\n          </form>\n        </div>\n      </div>\n    </AuthStyle>\n  );\n}\n\nexport default withApollo(SignUp);\n\nSignUp.propTypes = {\n  client: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n","import styled from \"styled-components\";\n\nexport const WorkoutsStyleList = styled.div`\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  width: 90vw;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const WorkoutsStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  padding: 2rem 0;\n  text-align: left;\n  h3 {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    font-weight: bolder;\n    font-size: 1.2rem;\n    padding: 0 2rem;\n    position: relative;\n    a {\n      position: absolute;\n      right: 2rem;\n      top: 50%;\n      transform: translate(0, -50%);\n    }\n  }\n\n  .load-more {\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 1rem 0;\n\n    button {\n      background-color: #ff8744;\n      color: white;\n    }\n  }\n\n  .container {\n    width: 100%;\n    padding: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n  }\n  .cw-buttons {\n    width: 100%;\n  }\n`;\n\nexport const WorkoutStyle = styled.div`\n  width: 30%;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 1rem;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.2);\n    color: #ff8744;\n  }\n\n  @media only screen and (max-width: 1065px) {\n    width: 40%;\n  }\n\n  @media only screen and (max-width: 800px) {\n    width: 45%;\n  }\n\n  @media only screen and (max-width: 710px) {\n    width: 65%;\n  }\n\n  @media only screen and (max-width: 550px) {\n    width: 85%;\n  }\n\n  @media only screen and (max-width: 500px) {\n    width: 95%;\n  }\n\n  img {\n    width: 100%;\n    height: 250px;\n  }\n\n  .workout-details {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    width: 100%;\n    padding: 0 0.5rem;\n    margin: 1rem 0;\n\n    h2 {\n      margin: 1rem 0;\n      width: 100%;\n      font-family: \"Ubuntu\";\n    }\n\n    .workout-type {\n      p {\n        font-family: \"Roboto\";\n        display: flex;\n        margin: 0.5rem 0;\n        width: 100%;\n      }\n    }\n  }\n`;\n\nexport const WorkoutDetailStyle = styled.div`\n  min-height: 100vh;\n  width: 90vw;\n  margin: 0 auto;\n  margin-bottom: 5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  padding: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  @media only screen and (max-width: 400px) {\n    width: 97vw;\n  }\n\n  .workout {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-around;\n    align-items: center;\n\n    @media only screen and (max-width: 800px) {\n      flex-direction: column;\n    }\n\n    .workout-detail {\n      width: 45%;\n      display: flex;\n      flex-wrap: wrap;\n      flex-direction: column;\n      justify-content: center;\n\n      @media only screen and (max-width: 800px) {\n        width: 75%;\n      }\n\n      @media only screen and (max-width: 550px) {\n        width: 95%;\n      }\n\n      @media only screen and (max-width: 400px) {\n        width: 100%;\n      }\n    }\n\n    .workout-image {\n      width: 45%;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n\n      @media only screen and (max-width: 800px) {\n        width: 75%;\n      }\n\n      @media only screen and (max-width: 550px) {\n        width: 95%;\n      }\n\n      @media only screen and (max-width: 400px) {\n        width: 100%;\n      }\n\n      img {\n        height: 400px;\n      }\n    }\n  }\n\n  .workout-quotes {\n    margin: 1rem 0;\n    width: 80%;\n    padding: 0 1rem;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .exercise {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-around;\n    align-items: center;\n\n    .exercise-detail {\n      width: 45%;\n\n      @media only screen and (max-width: 800px) {\n        width: 95%;\n      }\n    }\n\n    .exercise-video {\n      width: 45%;\n\n      div {\n        width: 100%;\n      }\n\n      @media only screen and (max-width: 800px) {\n        width: 95%;\n      }\n    }\n  }\n\n  .exercise-preview {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: flex-start;\n    align-items: center;\n\n    @media only screen and (max-width: 400px) {\n      flex-direction: column;\n    }\n\n    img {\n      width: 150px;\n      height: 100px;\n    }\n\n    .exercise-preview-detail {\n      padding: 1rem;\n    }\n  }\n`;\n\nexport const CustomWorkoutStyleDetail = styled.div`\n  width: 90vw;\n  min-height: 100vh;\n  padding: 1rem;\n  margin: 0 auto;\n  margin-bottom: 5rem;\n  text-align: left;\n\n  @media only screen and (max-width: 400px) {\n    width: 97vw;\n  }\n\n  .cw-title {\n    padding-bottom: 1rem;\n  }\n\n  .search-exercises {\n    position: relative;\n  }\n\n  .search-results {\n    position: absolute;\n    width: 100%;\n    top: 100%;\n    background-color: #fffcf2;\n    height: auto;\n    max-height: 30vh;\n    overflow-x: hidden;\n    overflow-y: auto;\n    text-align: left;\n    z-index: 900;\n    p {\n      cursor: pointer;\n      line-height: 2rem;\n      transition: all 0.2s ease-in-out;\n      border-bottom: 1px solid #fffcf2;\n      padding: 0 1rem;\n      &.selected {\n        background: #ff8744;\n        color: white;\n      }\n      &:hover {\n        background: rgba(255, 135, 68, 0.75);\n        color: white;\n      }\n    }\n  }\n\n  input,\n  textarea,\n  select {\n    padding: 0 1rem;\n  }\n\n  textarea {\n    padding: 0.8rem 1rem;\n    min-height: 80px;\n    max-height: 30vh;\n  }\n\n  .list-exercises {\n    text-align: left;\n    padding-top: 1.5rem;\n    h2 {\n      padding-bottom: 1rem;\n    }\n    & > p {\n      position: relative;\n      line-height: 3rem;\n      transition: all 0.2s ease-in-out;\n      border-bottom: 1px solid #fffcf2;\n      button {\n        position: absolute;\n        top: 50%;\n        right: 0;\n        transform: translate(0, -50%);\n      }\n    }\n  }\n\n  .cw-submit-btn {\n    margin-top: 1rem;\n  }\n`;\n","import React from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { Heading, ButtonGroup, Button, useToast } from \"@chakra-ui/core\";\nimport { WorkoutStyle } from \"./WorkoutStyle\";\nimport defaultPicture from \"../../assets/banner.jpg\";\nimport { DELETE_CUSTOM_WORKOUT } from \"../../graphql/mutations\";\n\nfunction Workout({ client, data, history, cardQuery, setLimitedWorkouts }) {\n  const toast = useToast();\n  const { name, intensity, types, id, picture } = data;\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const deleteCustomWorkout = () => {\n    client\n      .mutate({\n        mutation: DELETE_CUSTOM_WORKOUT,\n        variables: {\n          workoutId: id,\n          remove: true,\n          name: \"\",\n          description: \"\",\n          intensity: \"\",\n          exercises: []\n        }\n      })\n      .then(res => {\n        setLimitedWorkouts(workouts => workouts.filter(w => w.id !== id));\n        alert(\"Custom workout deleted!\", \"🏋🏾‍♀️\", \"success\");\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\n          \"An error occurred.\",\n          \"Unable to delete custom workout ☹️\",\n          \"error\"\n        );\n      });\n  };\n  const editCustomWorkout = id => e => {\n    history.push(`/my/workout/${id}`);\n  };\n  const pic = picture ? picture : defaultPicture;\n  if (cardQuery === \"CUSTOM_WORKOUTS\") {\n    return (\n      <WorkoutStyle>\n        <Link to={`/workout/${id}`}>\n          <img src={pic} alt={name} />\n        </Link>\n        <div className=\"workout-details\">\n          <Link to={`/workout/${id}`}>\n            <Heading size=\"sm\" textAlign=\"left\">\n              {name}\n            </Heading>\n            <div className=\"workout-type\">\n              <p>Intensity: {intensity}</p>\n              <p>Type: {types}</p>\n            </div>\n          </Link>\n          <ButtonGroup className=\"cw-buttons\">\n            <Button\n              onClick={editCustomWorkout(id)}\n              leftIcon=\"edit\"\n              variant=\"outline\"\n              variantColor=\"yellow\"\n            >\n              Edit\n            </Button>\n            <Button\n              onClick={deleteCustomWorkout}\n              leftIcon=\"delete\"\n              variant=\"outline\"\n              variantColor=\"red\"\n            >\n              Delete\n            </Button>\n          </ButtonGroup>\n        </div>\n      </WorkoutStyle>\n    );\n  }\n\n  return (\n    <WorkoutStyle>\n      <Link to={`/workout/${id}`}>\n        <img src={picture} alt={name} />\n\n        <div className=\"workout-details\">\n          <Heading size=\"sm\" textAlign=\"left\">\n            {name}\n          </Heading>\n\n          <div className=\"workout-type\">\n            <p>Intensity: {intensity}</p>\n            <p>Type: {types}</p>\n          </div>\n        </div>\n      </Link>\n    </WorkoutStyle>\n  );\n}\n\n//adding proptypes\nWorkout.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default withApollo(withRouter(Workout));\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Button, Flex, useToast } from \"@chakra-ui/core\";\nimport { withApollo } from \"react-apollo\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport { GET_WORKOUTS, GET_WORKOUTS_BY_FIELDS } from \"../../graphql/queries\";\nimport CustomSpinner from \"../common/Spinner\";\nimport WorkoutCard from \"./Workout\";\nimport { WorkoutsStyle } from \"./WorkoutStyle\";\nimport { getUserDetails } from \"../../utils\";\n\nconst user = getUserDetails();\n\nfunction Workouts({ client, workoutName, workoutQuery, search }) {\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [limitedWorkouts, setLimitedWorkouts] = useState([]);\n  const [limit, setLimit] = useState(3);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    let promise;\n    const query = search ? GET_WORKOUTS_BY_FIELDS : GET_WORKOUTS;\n    const variables = search ? { search, fields: [\"name\"] } : null;\n\n    if (workoutQuery === \"CUSTOM_WORKOUTS\") {\n      promise = client.query({\n        query: GET_WORKOUTS_BY_FIELDS,\n        variables: {\n          search: user.user_id,\n          fields: [\"userId\"]\n        }\n      });\n    } else {\n      promise = client.query({ query, variables });\n    }\n\n    promise\n      .then(res => {\n        let limitWorkouts = res.data.workouts.slice(0, limit);\n        setData(res.data.workouts);\n        setLimitedWorkouts(limitWorkouts);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n        setError(true);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const loadMore = () => {\n    const newLimit = limit + 3;\n    let limitWorkouts = data.slice(0, newLimit);\n    // if (exerciseQuery === \"TOP_RATED_EXERCISES\") {\n    //   limitExercises = limitExercises.sort(\n    //     (a, b) => parseFloat(a.rating) - parseFloat(b.rating)\n    //   );\n    // }\n    setLimitedWorkouts(limitWorkouts);\n    setLimit(newLimit);\n  };\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  if (error) {\n    alert(\"An error occurred.\", \"Unable to load workouts\", \"error\");\n    return <Redirect to=\"/\" />;\n  }\n\n  if (workoutQuery === \"CUSTOM_WORKOUTS\") {\n    return (\n      <WorkoutsStyle>\n        <h3>\n          Custom workouts\n          <Link to=\"/my/workout/new\">\n            <Button variantColor=\"orange\" leftIcon=\"add\" isLoading={isLoading}>\n              New workout\n            </Button>\n          </Link>\n        </h3>\n        {limitedWorkouts.length > 0 ? (\n          <>\n            <div className=\"container\">\n              {limitedWorkouts.map(item => (\n                <WorkoutCard\n                  key={item.id}\n                  data={item}\n                  cardQuery={workoutQuery}\n                  setLimitedWorkouts={setLimitedWorkouts}\n                />\n              ))}\n            </div>\n            <div className=\"load-more\">\n              <Button onClick={loadMore}>Load More</Button>\n            </div>\n          </>\n        ) : null}\n      </WorkoutsStyle>\n    );\n  }\n\n  if (limitedWorkouts.length > 0) {\n    return (\n      <WorkoutsStyle>\n        <h3>{workoutName}</h3>\n        {limitedWorkouts.map(item => (\n          <WorkoutCard key={item.id} data={item} />\n        ))}\n\n        <div className=\"load-more\">\n          <Button onClick={loadMore}>Load More</Button>\n        </div>\n      </WorkoutsStyle>\n    );\n  }\n\n  return (\n    <Box>\n      <Flex width=\"100vw\" height=\"100vh\" justifyContent=\"center\" align=\"center\">\n        <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n      </Flex>\n    </Box>\n  );\n}\n\nexport default withApollo(Workouts);\n\nWorkouts.propTypes = {\n  client: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Input from \"./Input\";\n\nconst StyledSearch = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  padding: 1rem;\n\n  h3 {\n    font-weight: bold;\n    font-family: \"Ubuntu\";\n    width: 100%;\n    display: flex;\n    font-size: 1.5rem;\n  }\n`;\n\nconst Search = ({ placeholder, search, setSearch }) => {\n  const onChange = e => {\n    const inputSearch = e.target.value;\n    setSearch(s => inputSearch);\n  };\n  return (\n    <StyledSearch>\n      <h3>Search</h3>\n      <Input\n        type=\"text\"\n        placeholder={placeholder}\n        id=\"search\"\n        name=\"search\"\n        variant=\"filled\"\n        onChange={onChange}\n        value={search}\n      />\n    </StyledSearch>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport Workouts from \"./Workouts\";\nimport { WorkoutsStyleList } from \"./WorkoutStyle\";\n\nimport Search from \"../common/Search\";\nimport { useDebounce } from \"./../../utils/index\";\n\nconst WorkoutList = () => {\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 700);\n  return (\n    <WorkoutsStyleList>\n      <Search\n        placeholder=\"Look for a specific workout\"\n        setSearch={setSearch}\n        search={search}\n      />\n      <Workouts workoutName=\"Custom Workouts\" workoutQuery=\"CUSTOM_WORKOUTS\" />\n      <Workouts\n        workoutName={search ? `Search results for \"${search}\"` : `New Workouts`}\n        search={debouncedSearch}\n      />\n    </WorkoutsStyleList>\n  );\n};\n\nexport default WorkoutList;\n","import React from \"react\";\nimport { Heading, Text, Box } from \"@chakra-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction SideTitle({ heading, subheading, size }) {\n  return (\n    <Box textAlign=\"left\" marginBottom=\"60px\">\n      <Heading size={size}>{heading}</Heading>\n      {subheading ? <Text>{subheading}</Text> : null}\n    </Box>\n  );\n}\n\n//adding proptypes\nSideTitle.propTypes = {\n  heading: PropTypes.string.isRequired,\n  subheading: PropTypes.string\n};\n\nexport default SideTitle;\n","import React from \"react\";\nimport { Heading, Text, Box, Divider, Flex } from \"@chakra-ui/core\";\n\nfunction DetailList({ value, label }) {\n  return (\n    <Box>\n      <Flex>\n        <Text textAlign=\"left\" minWidth=\"180px\">\n          {label}\n        </Text>\n        <Heading textAlign=\"left\" size=\"sm\">\n          {value}\n        </Heading>\n      </Flex>\n      <Divider />\n    </Box>\n  );\n}\n\nexport default DetailList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTimer = styled.p`\n  font-size: 36px;\n  line-height: 64px;\n  padding-bottom: 5px;\n  color: #1a202c;\n`;\n\nfunction Timer({ time }) {\n  const renderTime = () => {\n    const seconds = String(time % 60).padStart(2, \"0\");\n    const minutes = String(Math.floor(seconds / 60)).padStart(2, \"0\");\n    return `${minutes}:${seconds}`;\n  };\n  return <StyledTimer>{renderTime()}</StyledTimer>;\n}\n\nexport default Timer;\n","import React, { useEffect, useState } from \"react\";\nimport CalendarLib from \"react-calendar\";\nimport moment from \"moment\";\n\nconst Calendar = ({ setDate }) => {\n  const [date, setCalendarDate] = useState(new Date());\n\n  useEffect(() => {\n    setDate(moment(new Date()).format(\"YYYY-MM-DD\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = date => {\n    setCalendarDate(date);\n    setDate(moment(date).format(\"YYYY-MM-DD\"));\n  };\n\n  return (\n    <div>\n      <CalendarLib onChange={onChange} value={date} />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTime = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  padding: 1rem;\n  justify-content: space-evenly;\n\n  .time-content {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n\n    i {\n      margin: 0.5rem 0;\n      color: #ff8744;\n      cursor: pointer;\n    }\n\n    div {\n      input {\n        width: 40px;\n        border: 1px solid black;\n        text-align: center;\n        border-radius: 5px;\n      }\n    }\n  }\n`;\n\nconst Time = ({ setTime }) => {\n  let [hour, setHour] = useState(\"00\");\n  let [minute, setMinute] = useState(\"00\");\n  let [zone, setZone] = useState(\"AM\");\n\n  useEffect(() => {\n    const newTime = `${hour}:${minute} ${zone}`;\n    setTime(newTime);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const increaseHour = () => {\n    let newHour = hour;\n\n    if (parseInt(newHour) >= 12) {\n      newHour = \"01\";\n    } else {\n      newHour = parseInt(hour) + 1;\n    }\n    setHour(newHour);\n    const newTime = `${newHour}:${minute} ${zone}`;\n    setTime(newTime);\n  };\n\n  const decreaseHour = () => {\n    let newHour = hour;\n    if (parseInt(newHour) <= 0) {\n      newHour = 12;\n    } else {\n      newHour = parseInt(hour) - 1;\n    }\n    setHour(newHour);\n    const newTime = `${newHour}:${minute} ${zone}`;\n    setTime(newTime);\n  };\n\n  const increaseMinute = () => {\n    let newMinute = \"00\";\n    if (minute === \"00\") {\n      newMinute = \"30\";\n    } else {\n      newMinute = \"00\";\n    }\n\n    setMinute(newMinute);\n    const newTime = `${hour}:${newMinute} ${zone}`;\n    setTime(newTime);\n  };\n\n  const setCurrentZone = () => {\n    let newZone = \"AM\";\n    if (zone === \"AM\") {\n      newZone = \"PM\";\n    } else {\n      newZone = \"AM\";\n    }\n\n    setZone(newZone);\n    const newTime = `${hour}:${minute} ${newZone}`;\n    setTime(newTime);\n  };\n\n  return (\n    <StyledTime>\n      <div className=\"time-content\">\n        <i className=\"fas fa-arrow-up\" onClick={increaseHour}></i>\n        <div>\n          <input\n            type=\"number\"\n            onChange={e => setHour(e.target.value)}\n            disabled\n            value={hour}\n          />\n          <span> :</span>\n        </div>\n\n        <i className=\"fas fa-arrow-down\" onClick={decreaseHour}></i>\n      </div>\n\n      <div className=\"time-content\" onClick={increaseMinute}>\n        <i className=\"fas fa-arrow-up\"></i>\n        <div>\n          <input\n            type=\"number\"\n            value={minute}\n            onChange={e => setMinute(e.target.value)}\n            disabled\n          />\n          <span> :</span>\n        </div>\n\n        <i className=\"fas fa-arrow-down\"></i>\n      </div>\n\n      <div className=\"time-content\">\n        <i className=\"fas fa-arrow-up\" onClick={setCurrentZone}></i>\n        <div>\n          <input\n            type=\"text\"\n            disabled\n            onChange={e => setZone(e.target.value)}\n            value={zone}\n          />\n        </div>\n\n        <i className=\"fas fa-arrow-down\" onClick={setCurrentZone}></i>\n      </div>\n    </StyledTime>\n  );\n};\n\nexport default Time;\n","import styled from \"styled-components\";\n\nexport const HistoryStyle = styled.div`\n  width: 90vw;\n  margin: 0 auto;\n  margin-bottom: 5rem;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  padding: 1rem 2rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  min-height: 100vh;\n\n  @media only screen and (max-width: 800px) {\n    width: 90vw;\n  }\n\n  @media only screen and (max-width: 500px) {\n    width: 95vw;\n  }\n\n  @media only screen and (max-width: 400px) {\n    width: 97vw;\n  }\n\n  header {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: flex-start;\n    margin-bottom: 1rem;\n    width: 100%;\n\n    h2 {\n      font-family: Ubuntu;\n      font-style: normal;\n      font-weight: bold;\n      font-size: 1.6rem;\n      line-height: 1.5;\n      margin-bottom: 0.5rem;\n      color: #252422;\n    }\n\n    p {\n      font-family: Ubuntu;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 1rem;\n      line-height: 150.19%;\n\n      letter-spacing: 0.02em;\n\n      color: #ccc5b9;\n    }\n  }\n`;\n\nexport const ModalFooter = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 1rem;\n  justify-content: flex-end;\n\n  button {\n    margin: 0 0.5rem;\n  }\n`;\n\nexport const ModalContentArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  min-height: 150px;\n  border-width: 1px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.8rem;\n\n  .schedule {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-evenly;\n    align-items: center;\n\n    .calendar {\n      width: 55%;\n\n      .react-calendar {\n        width: 100%;\n      }\n    }\n\n    .time {\n      width: 40%;\n      border: 1px solid #ccc5b9;\n    }\n\n    .schedule-content {\n      display: flex;\n      flex-wrap: wrap;\n      width: 100%;\n      justify-content: flex-start;\n      margin: 1rem 0;\n      flex-direction: column;\n      padding: 1rem;\n\n      .routine {\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        margin: 1rem 0;\n\n        p {\n          padding-right: 1rem;\n        }\n      }\n\n      .notification {\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n\n        p {\n          padding-right: 1rem;\n        }\n\n        input {\n          border: 1px solid black;\n          width: 40px;\n          text-align: center;\n          margin-right: 1rem;\n        }\n\n        select {\n        }\n      }\n    }\n  }\n`;\n\nexport const WorkoutHistoryCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  cursor: pointer;\n  border-top: 1px solid #ccc5b9;\n  border-bottom: 1px solid #ccc5b9;\n\n  .history {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n\n    @media only screen and (max-width: 550px) {\n      flex-direction: column;\n    }\n\n    .link {\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 300;\n      font-size: 0.9rem;\n      line-height: 0.9rem;\n      text-transform: uppercase;\n      color: #252422;\n      padding: 0 1rem;\n\n      @media only screen and (max-width: 550px) {\n        padding: 1rem 0;\n      }\n      &:hover {\n        font-weight: bolder;\n      }\n    }\n\n    .history-detail {\n      display: flex;\n      flex-wrap: wrap;\n      width: 70%;\n      align-items: center;\n\n      .history-image {\n        width: 15%;\n\n        @media only screen and (max-width: 1000px) {\n          width: 25%;\n        }\n\n        @media only screen and (max-width: 650px) {\n          display: none;\n        }\n        img {\n          width: 100%;\n          height: 100px;\n        }\n      }\n      .history-content {\n        display: flex;\n        flex-wrap: wrap;\n        margin: 0 1rem;\n        flex-direction: column;\n\n        @media only screen and (max-width: 650px) {\n          margin: 1rem;\n        }\n        .workout-name {\n          font-family: Roboto;\n          font-style: normal;\n          font-weight: bolder;\n          font-size: 1rem;\n          line-height: 14px;\n          margin-bottom: 0.5rem;\n          color: #252422;\n        }\n        .flex {\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: space-evenly;\n\n          p {\n            color: #403d39;\n            font-family: Roboto;\n            font-style: normal;\n            font-weight: 300;\n            font-size: 0.8rem;\n            line-height: 12px;\n            margin: 0.5rem 0;\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, useToast } from \"@chakra-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { FaPlayCircle, FaStopCircle, FaCircle, FaPause } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { withApollo } from \"react-apollo\";\nimport Timer from \"../common/Timer\";\n\nimport Calendar from \"../common/Calendar\";\nimport Time from \"../common/Time\";\nimport { SCHEDULE_WORKOUT } from \"../../graphql/mutations\";\nimport {\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalFooter,\n  ModalBody\n} from \"@chakra-ui/core\";\n\nimport {\n  // HistoryStyle,\n  ModalFooter as StyledModalFooter,\n  ModalContentArea\n} from \"./WorkoutHistoryStyle\";\n\nimport {\n  START_WORKOUT,\n  PAUSE_WORKOUT,\n  END_WORKOUT\n} from \"../../graphql/mutations\";\nimport { getUserDetails } from \"../../utils\";\n\nimport BEEP_WAV from \"../../assets/ElectronicChimeKevanGC.wav\";\nimport BEEP_OGG from \"../../assets/ElectronicChimeKevanGC.ogg\";\nimport BEEP_MP3 from \"../../assets/ElectronicChimeKevanGC.mp3\";\n\nconst userData = getUserDetails();\n\nconst StyledWorkoutItems = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  position: sticky;\n  top: 0;\n  background-color: #fff;\n  z-index: 999;\n  align-items: center;\n\n  button {\n    margin: 1rem;\n  }\n  .isHidden {\n    display: none;\n  }\n\n  .isVisible {\n    display: flex;\n  }\n`;\n\nconst WorkoutActionItems = ({\n  client,\n  history,\n  workout,\n  timerExercise,\n  setTimerExercise,\n  getExerciseIndexById,\n  setWorkout\n}) => {\n  const toast = useToast();\n  const [start, setStart] = useState(\"isVisible\");\n  const [pause, setPause] = useState(\"isHidden\");\n  const [stop, setStop] = useState(\"isHidden\");\n  const [reminder, setReminder] = useState(\"10\");\n  const [routine, setRoutine] = useState(\"No\");\n  const [date, setDate] = useState(false);\n  const [time, setTime] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currTime, setCurrTime] = useState(0);\n  const beep = useRef(null);\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const getCurrentExercise = () => {\n    return workout.exercises[getExerciseIndexById(timerExercise)];\n  };\n\n  const handleStart = () => {\n    const currentExercise = getCurrentExercise();\n    client\n      .mutate({\n        mutation: START_WORKOUT,\n        variables: {\n          userId: userData.user_id,\n          workoutId: workout.id,\n          exerciseId: currentExercise.id,\n          exerciseTimer: currTime\n        }\n      })\n      .then(res => {\n        setStart(\"isHidden\");\n        setPause(\"isVisible\");\n        setStop(\"isVisible\");\n        setWorkout(w => ({ ...w, session: res.data.workoutSession }));\n        alert(\"Workout started\", \"🏋🏾‍♀️\", \"success\");\n      })\n      .catch(error => {\n        alert(\"An error occurred.\", \"Unable to start workout ☹️\", \"error\");\n      });\n  };\n\n  const handlePause = () => {\n    const currentExercise = getCurrentExercise();\n    console.log(\"handlePause\", currTime);\n    client\n      .mutate({\n        mutation: PAUSE_WORKOUT,\n        variables: {\n          userId: userData.user_id,\n          workoutId: workout.id,\n          exerciseId: currentExercise.id,\n          exerciseTimer: currTime,\n          pause: true\n        }\n      })\n      .then(res => {\n        setStart(\"isVisible\");\n        setPause(\"isHidden\");\n        setStop(\"isVisible\");\n        setWorkout(w => ({ ...w, session: res.data.workoutSession }));\n        alert(\"Workout paused!\", \"🏋🏾‍♀️\", \"success\");\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\"An error occurred.\", \"Unable to pause workout ☹️\", \"error\");\n      });\n  };\n\n  const handleStop = () => {\n    const currentExercise = getCurrentExercise();\n    client\n      .mutate({\n        mutation: END_WORKOUT,\n        variables: {\n          userId: userData.user_id,\n          workoutId: workout.id,\n          exerciseId: currentExercise.id,\n          exerciseTimer: currentExercise.time,\n          end: true\n        }\n      })\n      .then(res => {\n        setStart(\"isVisible\");\n        setPause(\"isHidden\");\n        setStop(\"isHidden\");\n        setWorkout(w => ({ ...w, session: res.data.workoutSession }));\n        setTimerExercise(workout.exercises[0].id);\n        setCurrTime(currTime => 0);\n        alert(\"Workout ended!\", \"🏋🏾‍♀️\", \"success\");\n      })\n      .catch(error => {\n        console.log(error);\n        alert(\"An error occurred.\", \"Unable to stop workout ☹️\", \"error\");\n      });\n  };\n\n  const onCopyEdit = () => {\n    history.push(`/my/workout/${workout.id}`);\n  };\n\n  const scheduleWorkout = () => {\n    let dateTime = `${date} ${time}`;\n    const startTime = new Date(dateTime).getTime();\n    client\n      .mutate({\n        mutation: SCHEDULE_WORKOUT,\n        variables: {\n          startDate: startTime,\n          workoutId: workout.id,\n          reminderTime: parseInt(reminder),\n          routine\n        }\n      })\n      .then(res => {\n        onClose();\n        alert(\"Workout scheduled successfully\", \"🚀\", \"success\");\n      })\n      .catch(err => alert(\"Unable to schedule workout\", \"☹️\", \"error\"));\n  };\n\n  useEffect(() => {\n    let updateTimer;\n    const currentExercise = getCurrentExercise();\n    if (start === \"isHidden\") {\n      if (currTime <= currentExercise.time) {\n        updateTimer = setTimeout(() => {\n          setCurrTime(t => t + 1);\n        }, 1000);\n        if (currTime + 4 > currentExercise.time - 1) {\n          beep.current.load();\n          beep.current.play();\n        }\n      } else {\n        clearTimeout(updateTimer);\n        const currIndex = getExerciseIndexById(timerExercise);\n        if (currIndex < workout.exercises.length - 1) {\n          // go to next exercise\n          setTimerExercise(workout.exercises[currIndex + 1].id);\n          // continue timer\n          setCurrTime(t => 0);\n        } else {\n          handleStop();\n        }\n      }\n    } else {\n      clearTimeout(updateTimer);\n    }\n    return () => clearTimeout(updateTimer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timerExercise, start, pause, stop, currTime]);\n\n  useEffect(() => {\n    let scrollTimeout;\n    if (workout && workout.exercises && start === \"isHidden\") {\n      const accordionItem = document.getElementById(\n        `accordion-header-${timerExercise}`\n      );\n      if (accordionItem) {\n        scrollTimeout = setTimeout(function() {\n          const yOffset = -72;\n          const y =\n            accordionItem.getBoundingClientRect().top +\n            window.pageYOffset +\n            yOffset;\n          window.scrollTo({ top: y, behavior: \"smooth\" });\n        }, 250);\n      }\n    }\n    return () => clearInterval(scrollTimeout);\n  }, [start, timerExercise, workout]);\n\n  useEffect(() => {\n    if (workout.session) {\n      console.log(\"initial state\");\n      setStart(workout.session.startDate ? \"isVisible\" : \"isHidden\");\n      setPause(workout.session.endDate ? \"isVisible\" : \"isHidden\");\n      setStop(workout.session.pause ? \"isVisible\" : \"isHidden\");\n      setCurrTime(workout.session ? workout.session.exerciseTimer : 0);\n    }\n    // pause workout if you exit the page while workout session is running\n    return () => {\n      console.log(\"pausebug?\");\n      if (workout.session && !workout.session.pause) {\n        console.log(\"pause\");\n        handlePause();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledWorkoutItems>\n      <audio\n        id=\"beep\"\n        ref={beep}\n        volume=\"1\"\n        preload=\"true\"\n        crossOrigin=\"anonymous\"\n      >\n        <source src={BEEP_WAV} type=\"audio/wav\" />\n        <source src={BEEP_OGG} type=\"audio/ogg\" />\n        <source src={BEEP_MP3} type=\"audio/mpeg\" />\n      </audio>\n      <Button\n        rightIcon={FaCircle}\n        variantColor=\"blue\"\n        variant=\"outline\"\n        size=\"md\"\n        onClick={onOpen}\n      >\n        Schedule\n      </Button>\n      <Button\n        rightIcon=\"copy\"\n        variantColor=\"blue\"\n        variant=\"outline\"\n        size=\"md\"\n        onClick={onCopyEdit}\n      >\n        Copy and Edit\n      </Button>\n\n      <Button\n        rightIcon={FaPlayCircle}\n        variantColor=\"green\"\n        variant=\"solid\"\n        size=\"md\"\n        className={start}\n        onClick={handleStart}\n      >\n        Start\n      </Button>\n\n      <Button\n        rightIcon={FaPause}\n        variantColor=\"orange\"\n        variant=\"outline\"\n        size=\"md\"\n        className={pause}\n        onClick={handlePause}\n      >\n        Pause\n      </Button>\n\n      <Button\n        rightIcon={FaStopCircle}\n        variantColor=\"red\"\n        variant=\"outline\"\n        size=\"md\"\n        className={stop}\n        onClick={handleStop}\n      >\n        Stop\n      </Button>\n\n      <Timer time={currTime} />\n\n      <Modal\n        blockScrollOnMount={false}\n        isOpen={isOpen}\n        onClose={onClose}\n        size=\"xl\"\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>{workout.name}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <ModalContentArea>\n              <div className=\"schedule\">\n                <div className=\"calendar\">\n                  <Calendar setDate={setDate} />\n                </div>\n\n                <div className=\"time\">\n                  <Time setTime={setTime} />\n                </div>\n\n                <div className=\"schedule-content\">\n                  <div className=\"routine\">\n                    <p>Set as routine</p>\n\n                    <select\n                      onChange={e => setRoutine(e.target.value)}\n                      name=\"\"\n                      id=\"\"\n                    >\n                      <option value=\"no\">No</option>\n                      <option value=\"daily\">Daily</option>\n                      <option value=\"weekly\">Weekly</option>\n                    </select>\n                  </div>\n\n                  <div className=\"notification\">\n                    <p>Notification</p>\n\n                    <input\n                      type=\"number\"\n                      name=\"notifificatino\"\n                      onChange={e => setReminder(e.target.value)}\n                      value={reminder}\n                      placeholder=\"10\"\n                    />\n                    <p>mins</p>\n                  </div>\n                </div>\n              </div>\n            </ModalContentArea>\n          </ModalBody>\n          <ModalFooter>\n            <StyledModalFooter>\n              <Button variantColor=\"green\" onClick={scheduleWorkout}>\n                Save\n              </Button>\n              <Button\n                variantColor=\"orange\"\n                variant=\"outline\"\n                mr={3}\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n            </StyledModalFooter>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </StyledWorkoutItems>\n  );\n};\n\nexport default withApollo(withRouter(WorkoutActionItems));\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\";\n\nimport { WorkoutDetailStyle } from \"./WorkoutStyle\";\nimport SideTitle from \"../common/SideTitle\";\nimport DetailList from \"./DetailList\";\nimport {\n  Flex,\n  Box,\n  Text,\n  Stack,\n  Heading,\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionPanel,\n  AccordionIcon,\n  useToast\n} from \"@chakra-ui/core\";\n\nimport CustomSpinner from \"../common/Spinner\";\nimport { GET_WORKOUT_DETAIL } from \"../../graphql/queries\";\nimport WorkoutActionItems from \"./WorkoutActionItems\";\nimport Quotes from \"../common/Quotes\";\n\nfunction WorkoutDetail({ client }) {\n  const [workout, setWorkout] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [timerExercise, setTimerExercise] = useState(null);\n\n  const match = useRouteMatch();\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const getExerciseIndexById = id => {\n    const exerciseIds = Object.values(workout.exercises).map(\n      exercise => exercise.id\n    );\n    return exerciseIds.indexOf(timerExercise);\n  };\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_WORKOUT_DETAIL,\n        variables: {\n          id: match.params.id\n        }\n      })\n      .then(({ data: { workout } }) => {\n        setWorkout(workout);\n        setTimerExercise(\n          workout.session ? workout.session.exerciseId : workout.exercises[0].id\n        );\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n        setError(true);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  if (error) {\n    alert(\"An error occurred.\", \"Unable to load workout detail\", \"error\");\n    return <Redirect to=\"/workouts\" />;\n  }\n\n  const {\n    name,\n    intensity,\n    types,\n    description,\n    avgTime,\n    equipment,\n    muscles,\n    exercises,\n    picture\n  } = workout;\n\n  return (\n    <WorkoutDetailStyle>\n      <div className=\"workout\">\n        <div className=\"workout-detail\">\n          <SideTitle heading={name} size=\"lg\" />\n          <DetailList label=\"Average Time\" value={avgTime} />\n          <DetailList label=\"Intensity\" value={intensity} />\n          <DetailList label=\"Types\" value={types} />\n          <DetailList label=\"Equipment\" value={equipment} />\n          <DetailList label=\"Muscles\" value={muscles} />\n          <Text textAlign=\"left\" marginY=\"30px\">\n            {description}\n          </Text>\n        </div>\n\n        <div className=\"workout-image\">\n          <img src={picture} alt=\"workout\" />\n        </div>\n      </div>\n\n      <div className=\"workout-quotes\">\n        <Quotes />\n      </div>\n\n      <Heading size=\"md\" marginTop=\"60px\" textAlign=\"center\">\n        Check the description and video instructions of an exercise and start\n        working out!\n      </Heading>\n\n      <WorkoutActionItems\n        getExerciseIndexById={getExerciseIndexById}\n        setTimerExercise={setTimerExercise}\n        timerExercise={timerExercise}\n        setWorkout={setWorkout}\n        workout={workout}\n      />\n\n      <Accordion index={getExerciseIndexById(timerExercise)}>\n        {exercises &&\n          exercises.map(exercise => (\n            <AccordionItem key={exercise.id} id={exercise.id}>\n              <AccordionHeader _expanded={{ bg: \"#FFFCF2\" }}>\n                <div className=\"exercise-preview\">\n                  <img src={exercise.pictureOne} alt={exercise.name} />\n\n                  <div className=\"exercise-preview-detail\">\n                    <Text fontWeight=\"800\">{exercise.name}</Text>\n                    <Stack isInline spacing={8}>\n                      <Text>{exercise.muscle}</Text>\n                      <Text>{exercise.time}s</Text>\n                    </Stack>\n                  </div>\n                </div>\n\n                <AccordionIcon />\n              </AccordionHeader>\n              <AccordionPanel pb={4}>\n                <div className=\"exercise\">\n                  <div className=\"exercise-detail\">\n                    <Text>{exercise.description}</Text>\n                  </div>\n\n                  <div className=\"exercise-video\">\n                    <ReactPlayer width=\"100%\" url={exercise.video} controls />\n                  </div>\n                </div>\n              </AccordionPanel>\n            </AccordionItem>\n          ))}\n      </Accordion>\n    </WorkoutDetailStyle>\n  );\n}\n\n//adding proptypes\nWorkoutDetail.propTypes = {\n  client: PropTypes.object.isRequired\n};\n\nexport default withApollo(WorkoutDetail);\n","import styled from \"styled-components\";\n\nexport const ExerciseListStyle = styled.div`\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  width: 90vw;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ExercisesStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 2rem 0;\n\n  @media only screen and (max-width: 500px) {\n    width: 95vw;\n  }\n\n  h3 {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    font-weight: bolder;\n    font-size: 1.2rem;\n    padding: 0 2rem;\n  }\n\n  .search-container {\n    border: 1px solid red;\n    width: 70%;\n    text-align: left;\n\n    h4 {\n      font-weight: bold;\n    }\n\n    p {\n      color: grey;\n      padding: 0.2rem 0;\n    }\n  }\n\n  .load-more {\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    button {\n      background-color: #ff8744;\n      color: white;\n    }\n  }\n`;\n\nexport const ExerciseDetailStyle = styled.div`\n  min-height: 100vh;\n  width: 80vw;\n  margin: 0 auto;\n  margin-bottom: 5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  padding: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  @media only screen and (max-width: 500px) {\n    width: 95vw;\n  }\n\n  .exerciseCard-header {\n    text-align: left;\n    padding: 0.5rem 0;\n    h2 {\n      font-weight: bold;\n      font-size: 4vw;\n    }\n    p {\n      color: grey;\n    }\n  }\n\n  .exerciseCard-banner {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    margin: 1rem 0;\n    justify-content: center;\n    img {\n      width: auto;\n    }\n  }\n\n  .exerciseCard-information {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-around;\n\n    .exerciseCard-instruction {\n      width: 55%;\n      text-align: left;\n\n      h3 {\n        font-weight: bold;\n        font-size: 1.5rem;\n      }\n\n      @media only screen and (max-width: 600px) {\n        width: 90%;\n      }\n    }\n\n    .exerciseCard-data {\n      width: 40%;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      line-height: 3rem;\n      .exerciseCard-data-tab {\n        border-bottom: 1px solid black;\n        display: flex;\n        justify-content: space-between;\n        text-align: left;\n\n        .exerciseCard-data-value {\n          font-weight: Bold;\n          width: 67%;\n        }\n      }\n\n      @media only screen and (max-width: 600px) {\n        width: 90%;\n        margin: 1rem 0;\n      }\n    }\n  }\n\n  .exercise-video {\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: center;\n    margin: 1rem 0;\n\n    div {\n      width: 100%;\n    }\n  }\n`;\n\nexport const ExerciseStyle = styled.div`\n  width: 30%;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 1rem;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  justify-content: center;\n  transition: all 0.5s ease-in-out;\n\n  &:hover {\n    box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.2);\n    color: #ff8744;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    width: 45%;\n  }\n\n  @media only screen and (max-width: 800px) {\n    width: 75%;\n  }\n\n  @media only screen and (max-width: 500px) {\n    width: 95%;\n  }\n\n  img {\n    width: 100%;\n    height: 250px;\n  }\n\n  .exercise-detail {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    width: 100%;\n    padding: 0 0.5rem;\n    margin: 1rem 0;\n\n    h4 {\n      font-family: \"Ubuntu\";\n    }\n\n    .exercise-ratings {\n      i {\n        color: #ff8744;\n        padding: 0 0.3rem;\n      }\n    }\n  }\n\n  .exercise-equipment {\n    padding: 0 0.5rem;\n    display: flex;\n    p {\n      background-color: #e5e5e5;\n      padding: 0.4rem;\n      border-radius: 5px;\n      font-size: 0.7rem;\n      margin-bottom: 1rem;\n      font-family: \"Roboto\";\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ExerciseStyle } from \"./ExerciseStyle\";\n\nconst Exercise = ({ exercise }) => {\n  const { id, name, rating, pictureOne, equipment } = exercise;\n  return (\n    <ExerciseStyle>\n      <Link to={`/exercise/${id}`}>\n        <img src={pictureOne} alt={name} />\n\n        <div className=\"exercise-detail\">\n          <h4>{name}</h4>\n\n          <div className=\"exercise-ratings\">\n            <i className=\"fas fa-star\"></i>\n            {rating}\n          </div>\n        </div>\n\n        {equipment ? (\n          <div className=\"exercise-equipment\">\n            <p>{equipment}</p>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Link>\n    </ExerciseStyle>\n  );\n};\n\nexport default Exercise;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { useToast, Box, Flex, Button } from \"@chakra-ui/core\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { ExercisesStyle } from \"./ExerciseStyle\";\nimport CustomSpinner from \"../common/Spinner\";\nimport { GET_EXERCISES, EXERCISES_BY_FIELDS } from \"../../graphql/queries\";\nimport Exercise from \"./Exercise\";\n\nconst Exercises = ({ client, exerciseQuery, exerciseName, search }) => {\n  const toast = useToast();\n\n  const [loading, setLoading] = useState(false);\n  const [exercises, setExercises] = useState([]);\n  const [limitedExercises, setLimitedExercises] = useState([]);\n  const [limit, setLimit] = useState(3);\n  const [error, setError] = useState(false);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    let promise;\n    if (exerciseQuery === \"RECOMENDED_EXERCISES\") {\n      promise = client.query({\n        query: EXERCISES_BY_FIELDS,\n        variables: {\n          search: \"Beginner\", // get user experience\n          fields: [\"difficulty\"]\n        }\n      });\n    } else if (exerciseQuery === \"TOP_RATED_EXERCISES\") {\n      promise = client.query({\n        query: EXERCISES_BY_FIELDS,\n        variables: {\n          search: \"9\",\n          fields: [\"rating\"]\n        }\n      });\n    } else if (search.length > 0) {\n      promise = client.query({\n        query: EXERCISES_BY_FIELDS,\n        variables: {\n          search,\n          fields: [\"name\", \"description\"]\n        }\n      });\n    } else {\n      promise = client.query({\n        query: GET_EXERCISES\n      });\n    }\n\n    promise\n      .then(res => {\n        let limitExercises = res.data.exercises.slice(0, limit);\n\n        if (exerciseQuery === \"TOP_RATED_EXERCISES\") {\n          limitExercises = limitExercises.sort(\n            (a, b) => parseFloat(a.rating) - parseFloat(b.rating)\n          );\n        }\n\n        setExercises(res.data.exercises);\n        setLimitedExercises(limitExercises);\n        setLoading(false);\n      })\n      .catch(err => {\n        setLoading(false);\n        setError(true);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const loadMore = () => {\n    const newLimit = limit + 3;\n    let limitExercises = exercises.slice(0, newLimit);\n\n    if (exerciseQuery === \"TOP_RATED_EXERCISES\") {\n      limitExercises = limitExercises.sort(\n        (a, b) => parseFloat(a.rating) - parseFloat(b.rating)\n      );\n    }\n    setLimitedExercises(limitExercises);\n    setLimit(newLimit);\n  };\n\n  if (error) {\n    alert(\"An error occurred.\", \"Unable to load exercises\", \"error\");\n    return <Redirect to=\"/\" />;\n  }\n\n  if (loading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  if (limitedExercises.length > 0) {\n    return (\n      <ExercisesStyle>\n        <h3>{exerciseName}</h3>\n        {limitedExercises.map(exercise => (\n          <Exercise exercise={exercise} key={exercise.id} />\n        ))}\n\n        <div className=\"load-more\">\n          <Button onClick={loadMore}>Load More</Button>\n        </div>\n      </ExercisesStyle>\n    );\n  }\n\n  return (\n    <Box>\n      <Flex width=\"100vw\" height=\"100vh\" justifyContent=\"center\" align=\"center\">\n        <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default withApollo(Exercises);\n","import React, { useState } from \"react\";\nimport Exercises from \"./Exercises\";\nimport { ExercisesStyle, ExerciseListStyle } from \"./ExerciseStyle\";\nimport Search from \"../common/Search\";\nimport { useDebounce } from \"./../../utils/index\";\n\nconst ExerciseList = () => {\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 700);\n\n  return (\n    <ExerciseListStyle>\n      <ExercisesStyle>\n        <Search\n          placeholder=\"Look for a specific exercise\"\n          search={search}\n          setSearch={setSearch}\n        />\n        {search.length > 0 ? (\n          <Exercises\n            exerciseName={`Search results for \"${search}\"`}\n            search={debouncedSearch}\n          />\n        ) : (\n          <>\n            <Exercises\n              exerciseQuery=\"RECOMENDED_EXERCISES\"\n              exerciseName=\"Recommended Exercises\"\n            />\n            <Exercises\n              exerciseQuery=\"TOP_RATED_EXERCISES\"\n              exerciseName=\"Top Rated Exercises\"\n            />\n          </>\n        )}\n      </ExercisesStyle>\n    </ExerciseListStyle>\n  );\n};\n\nexport default ExerciseList;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { useToast } from \"@chakra-ui/core\";\nimport ReactPlayer from \"react-player\";\n\nimport { ExerciseDetailStyle } from \"./ExerciseStyle\";\nimport { GET_EXERCISE } from \"../../graphql/queries\";\nimport CustomSpinner from \"../common/Spinner\";\n\nconst ExerciseCard = ({ client, match }) => {\n  const toast = useToast();\n  const [exercise, setExercise] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    const { id } = match.params;\n    setLoading(true);\n    client\n      .query({\n        query: GET_EXERCISE,\n        variables: { id }\n      })\n      .then(res => {\n        setExercise(res.data.exercise);\n        setLoading(false);\n      })\n      .catch(() => {\n        alert(\"An error occurred.\", \"Unable to load exercise detail\", \"error\");\n        setLoading(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />;\n  }\n\n  if (exercise) {\n    const {\n      name,\n      description,\n      muscle,\n      difficulty,\n      equipment,\n      type,\n      rating,\n      video\n    } = exercise;\n    return (\n      <ExerciseDetailStyle>\n        <div className=\"exerciseCard-header\">\n          <h2>{name}</h2>\n        </div>\n\n        <div className=\"exercise-video\">\n          <ReactPlayer url={video} controls />\n        </div>\n\n        <div className=\"exerciseCard-information\">\n          <div className=\"exerciseCard-instruction\">\n            <h3>Instructions</h3>\n            <p>{description}</p>\n          </div>\n          <div className=\"exerciseCard-data\">\n            <div className=\"exerciseCard-data-tab\">\n              <p>Difficulty</p>\n              <p className=\"exerciseCard-data-value\">{difficulty}</p>\n            </div>\n            <div className=\"exerciseCard-data-tab\">\n              <p>Types</p>\n              <p className=\"exerciseCard-data-value\">{type}</p>\n            </div>\n            <div className=\"exerciseCard-data-tab\">\n              <p>Equipment</p>\n              <p className=\"exerciseCard-data-value\">{equipment}</p>\n            </div>\n            <div className=\"exerciseCard-data-tab\">\n              <p>Muscles</p>\n              <p className=\"exerciseCard-data-value\">{muscle}</p>\n            </div>\n            <div className=\"exerciseCard-data-tab\">\n              <p>Ratings</p>\n              <p className=\"exerciseCard-data-value\">{rating}</p>\n            </div>\n          </div>\n        </div>\n      </ExerciseDetailStyle>\n    );\n  }\n\n  return <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />;\n};\n\nexport default withApollo(ExerciseCard);\n","import React from \"react\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  useToast,\n  useDisclosure\n} from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\n\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport Logo from \"./Logo\";\nimport { isLoggedIn } from \"../../utils\";\n\nconst isSignedIn = isLoggedIn();\n\nconst StyledNavigation = styled.div`\n  color: #ff8744;\n\n  .nav {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-bottom: 1rem 0;\n    padding: 1rem 2rem;\n    background-color: white;\n    box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n    margin-bottom: 3rem;\n  }\n`;\n\nconst StyledLinks = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  color: #343741;\n  flex-direction: column;\n  align-items: center;\n\n  a {\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    text-align: center;\n    margin: 0.5rem 0;\n    justify-content: center;\n    padding: 1rem;\n    transition: all 0.2s ease-in-out;\n    align-items: center;\n\n    &:hover {\n      background-color: #a9a9a9;\n    }\n  }\n`;\n\nconst Navigation = ({ location }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [placement] = React.useState(\"left\");\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem(\"userData\");\n    alert(\"Logged out successfully\", \"Come back soon 😀\", \"success\");\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  };\n\n  if (isSignedIn === true && location.pathname !== \"/onboarding\") {\n    return (\n      <StyledNavigation>\n        <div className=\"nav\">\n          <i className=\"fas fa-2x fa-bars\" onClick={onOpen}></i>\n          <Logo />\n        </div>\n\n        <Drawer placement={placement} onClose={onClose} isOpen={isOpen}>\n          <DrawerOverlay />\n          <DrawerContent>\n            <DrawerHeader\n              borderBottomWidth=\"1px\"\n              justifyContent=\"center\"\n              display=\"flex\"\n            >\n              <Logo />\n            </DrawerHeader>\n            <DrawerBody>\n              <StyledLinks>\n                <Link to=\"/\">\n                  Dashboard &nbsp; <i className=\"fas fa-chart-line\"></i>\n                </Link>\n\n                <Link to=\"/exercises\">\n                  Exercises &nbsp; <i className=\"fas fa-running\"></i>\n                </Link>\n\n                <Link to=\"/workouts\">\n                  Workouts &nbsp; <i className=\"fas fa-dumbbell\"></i>\n                </Link>\n\n                <Link to=\"/schedule\">\n                  Schedule &nbsp; <i className=\"fas fa-calendar-alt\"></i>\n                </Link>\n\n                <Link to=\"/workouthistory\">\n                  Workout History &nbsp; <i className=\"fas fa-history\"></i>\n                </Link>\n\n                <Link to=\"/buddies\">\n                  Friends &nbsp; <i className=\"fas fa-users\"></i>\n                </Link>\n\n                <Link to=\"/profile\">\n                  Profile &nbsp; <i className=\"far fa-user\"></i>\n                </Link>\n\n                <Link to=\"#\" onClick={logout}>\n                  Logout &nbsp; <i className=\"fas fa-sign-out-alt\"></i>\n                </Link>\n              </StyledLinks>\n            </DrawerBody>\n          </DrawerContent>\n        </Drawer>\n      </StyledNavigation>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default withRouter(Navigation);\n\nNavigation.propTypes = {\n  location: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport DefaultImage from \"../../images/login_image.png\";\nimport { WorkoutHistoryCard as StyledWorkoutHistoryCard } from \"./WorkoutHistoryStyle\";\n\nfunction WorkoutHistoryCard({ workout, onOpen, history }) {\n  const dateCompleted = new Date(workout.endDate).toLocaleDateString();\n\n  return (\n    <StyledWorkoutHistoryCard>\n      <div className=\"history\">\n        <section className=\"history-detail\" onClick={onOpen}>\n          <div className=\"history-image\">\n            <img\n              src={workout.picture || DefaultImage}\n              alt=\"workout thumbnail\"\n            />\n          </div>\n\n          <div className=\"history-content\">\n            <p className=\"workout-name\">{workout.workoutId.name}</p>\n            <p>\n              {dateCompleted} -{\" \"}\n              <strong style={{ color: \"green\" }}>COMPLETED</strong>\n            </p>\n\n            <div className=\"flex\">\n              <p>{workout.workoutId.intensity}</p>\n              <p>{workout.workoutId.avgTime}</p>\n            </div>\n          </div>\n        </section>\n        <Link to={`/workout/${workout.workoutId.id}`}>\n          <p className=\"link\">View Details</p>\n        </Link>\n      </div>\n    </StyledWorkoutHistoryCard>\n  );\n}\n\nexport default WorkoutHistoryCard;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport {\n  Box,\n  Flex,\n  useToast,\n  Heading,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalFooter,\n  ModalBody,\n  Button\n} from \"@chakra-ui/core\";\n\nimport CustomSpinner from \"../common/Spinner\";\nimport WorkoutHistoryCard from \"./WorkoutHistoryCard\";\nimport {\n  HistoryStyle,\n  ModalFooter as StyledModalFooter,\n  ModalContentArea\n} from \"./WorkoutHistoryStyle\";\nimport { GET_COMPLETED_WORKOUTS } from \"../../graphql/queries\";\nimport { UPLOAD_PROGRESS_PICTURE } from \"../../graphql/mutations\";\n\nfunction WorkoutHistory({ client, history }) {\n  const toast = useToast();\n  const [workouts, setWorkouts] = useState([]);\n  const [uploadId, setUploadId] = useState(\"\");\n  const [uploadFile, setUploadFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_COMPLETED_WORKOUTS\n      })\n      .then(res => {\n        setWorkouts(res.data.completedWorkouts);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        alert(\n          \"An error occurred.\",\n          \"Unable to load your completed workouts☹️.\",\n          \"error\"\n        );\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = e => {\n    const file = e.target.files[0];\n    setUploadFile(file);\n  };\n\n  const onOpenUpload = (id, e) => {\n    setUploadId(id);\n    onOpen(e);\n  };\n\n  const onUpload = e => {\n    e.preventDefault();\n    client\n      .mutate({\n        variables: {\n          sessionId: uploadId,\n          file: uploadFile\n        },\n        mutation: UPLOAD_PROGRESS_PICTURE\n      })\n      .then(res => {\n        console.log(res);\n        const { id, picture } = res.data.updateCompletedWorkout;\n        setWorkouts(\n          workouts.map(workout => {\n            if (workout.id === id) return { ...workout, picture };\n            return workout;\n          })\n        );\n        alert(\"Progress picture uploaded successfully\", \"🚀\", \"success\");\n      })\n      .catch(err =>\n        alert(\n          \"An error occurred.\",\n          \"Unable to upload your progress picture ☹️.\",\n          \"error\"\n        )\n      );\n  };\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  } else if (workouts.length === 0) {\n    return (\n      <HistoryStyle>\n        <header>\n          <Heading size=\"lg\" fontSize=\"50px\">\n            Your Workout History\n          </Heading>\n          <p>Check out all your completed workouts!</p>\n          <p>You can upload progress pictures and track your development!</p>\n        </header>\n        <Heading as=\"h3\">Sorry, you have no completed workouts</Heading>\n      </HistoryStyle>\n    );\n  } else {\n    return (\n      <HistoryStyle>\n        <header>\n          <Heading>Your Workout History</Heading>\n          <p>Check out all your completed workouts!</p>\n          <p>You can upload progress pictures and track your development!</p>\n        </header>\n\n        <div>\n          {workouts.map(workout => (\n            <WorkoutHistoryCard\n              onOpen={e => onOpenUpload(workout.id, e)}\n              key={workout.startDate}\n              workout={workout}\n              history={history}\n            />\n          ))}\n        </div>\n\n        <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Upload your progress picture </ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <ModalContentArea>\n                <input type=\"file\" name=\"Uplad\" onChange={onChange} />\n              </ModalContentArea>\n            </ModalBody>\n            <ModalFooter>\n              <StyledModalFooter>\n                <Button variantColor=\"green\" onClick={onUpload}>\n                  Save\n                </Button>\n                <Button\n                  variantColor=\"orange\"\n                  variant=\"outline\"\n                  mr={3}\n                  onClick={onClose}\n                >\n                  Cancel\n                </Button>\n              </StyledModalFooter>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </HistoryStyle>\n    );\n  }\n}\n\nexport default withApollo(WorkoutHistory);\n","import styled from \"styled-components\";\n\nexport const ScheduleStyle = styled.div`\n  width: 90vw;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.12);\n  padding: 2rem 0;\n\n  /* .search-container {\n    border: 1px solid red;\n    width: 70%;\n    text-align: left;\n\n    h4 {\n      font-weight: bold;\n    }\n\n    p {\n      color: grey;\n      padding: 0.2rem 0;\n    }\n  } */\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { useToast, Box, Flex } from \"@chakra-ui/core\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // for selectable\nimport timeGridPlugin from \"@fullcalendar/timegrid\"; // for timeGrid view\nimport { ScheduleStyle } from \"./ScheduleStyle\";\n\nimport { GET_SCHEDULE } from \"../../graphql/queries\";\nimport CustomSpinner from \"../common/Spinner\";\n\nconst ScheduleDetail = ({ client }) => {\n  const toast = useToast();\n  const [schedule, setSchedule] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    client\n      .query({\n        query: GET_SCHEDULE\n      })\n      .then(res => {\n        const newSchedule = res.data.userSchedule.map(item => {\n          item[\"title\"] = item.workoutId.name;\n          item[\"date\"] = new Date(item.startDate);\n          return item;\n        });\n        setSchedule(newSchedule);\n\n        setLoading(false);\n      })\n      .catch(err => {\n        alert(\"An error occurred.\", \"Unable to load Schedule\", \"error\");\n        setLoading(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />;\n  }\n\n  if (schedule.length > 0) {\n    return (\n      <ScheduleStyle>\n        <FullCalendar\n          defaultView=\"timeGridWeek\"\n          plugins={[interactionPlugin, timeGridPlugin]}\n          events={schedule}\n          selectable={true}\n        />\n      </ScheduleStyle>\n    );\n  }\n\n  return (\n    <Box>\n      <Flex width=\"100vw\" height=\"100vh\" justifyContent=\"center\" align=\"center\">\n        <div>\n          <h1>You have no Scheduled Workouts</h1>\n        </div>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default withApollo(ScheduleDetail);\n","import React, { useState } from \"react\";\nimport { Button, useToast } from \"@chakra-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Input from \"../common/Input\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { withApollo } from \"react-apollo\";\nimport Logo from \"../common/Logo\";\nimport AuthStyle from \"./AuthStyle\";\nimport Preview from \"../common/Preview\";\nimport { ACCOUNT_RECOVERY } from \"../../graphql/queries\";\nimport { RESET_PASSWORD } from \"../../graphql/mutations\";\n\nconst AccountRecovery = ({ client, match }) => {\n  const toast = useToast();\n  const [loading, setLoading] = useState(false);\n  const [successfulRecovery, setSuccessfulRecovery] = useState(false);\n  const token = match.params.token;\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: yup.object().shape({\n      email: yup\n        .string()\n        .email()\n        .required(\"Please enter your email\")\n    }),\n    onSubmit: value => {\n      setLoading(true);\n      client\n        .mutate({\n          mutation: ACCOUNT_RECOVERY,\n          variables: {\n            email: value.email\n          }\n        })\n        .then(response => {\n          console.log(response);\n          setLoading(false);\n\n          alert(\"Account Recovery Email Sent Successfully\", \"✅\", \"success\");\n          setSuccessfulRecovery(true);\n        })\n        .catch(error => {\n          setLoading(false);\n          console.log(error);\n          if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n            alert(\n              \"An error occurred.\",\n              error.graphQLErrors[0].message,\n              \"error\"\n            );\n          }\n        });\n    }\n  });\n\n  const formikReset = useFormik({\n    initialValues: {\n      password: \"\",\n      confirmpassword: \"\"\n    },\n    validationSchema: yup.object().shape({\n      password: yup\n        .string()\n        .required(\"Please enter your password\")\n        .matches(\n          /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n          \"Password must contain 8 characters, one uppercase, one lowercase, one number and one special case character\"\n        ),\n      confirmpassword: yup\n        .string()\n        .required(\"Please confirm your password\")\n        .when(\"password\", {\n          is: val => (val && val.length > 0 ? true : false),\n          then: yup\n            .string()\n            .oneOf(\n              [yup.ref(\"password\")],\n              \"Needs to be the same as password value\"\n            )\n        })\n    }),\n    onSubmit: value => {\n      setLoading(true);\n      client\n        .mutate({\n          mutation: RESET_PASSWORD,\n          variables: {\n            password: value.password,\n            rePassword: value.confirmpassword\n          },\n          context: {\n            headers: {\n              authorization: token\n            }\n          }\n        })\n        .then(response => {\n          setLoading(false);\n\n          alert(\"Password Changed Successfully.\", \"🔐\", \"success\");\n          setSuccessfulRecovery(true);\n        })\n        .catch(error => {\n          console.log(error);\n          setLoading(false);\n          if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n            alert(\n              \"An error occurred.\",\n              error.graphQLErrors[0].message,\n              \"error\"\n            );\n          }\n        });\n    }\n  });\n\n  // useEffect(() => {\n  //   if (match.params.token) {\n  //     console.log(match.params.token);\n\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  if (successfulRecovery) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (token) {\n    return (\n      <AuthStyle>\n        <div className=\"auth-container\">\n          <div className=\"auth-banner\">\n            <Preview pageName=\"Account Recovery\" />\n          </div>\n\n          <div className=\"auth-form\">\n            <div className=\"logo\">\n              <Logo />\n            </div>\n\n            <form onSubmit={formikReset.handleSubmit}>\n              <h2>Account Recovery</h2>\n              <h3>Enter your new password</h3>\n\n              <Input\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"PASSWORD\"\n                variant=\"filled\"\n                type=\"password\"\n                onChange={formikReset.handleChange}\n                value={formikReset.values.password}\n                bg=\"#FFFCF2\"\n                _hover=\"black\"\n                focusBorderColor=\"#FF8744\"\n                errorBorderColor=\"crimson\"\n                error={formikReset.errors.password}\n                onBlur={formikReset.handleBlur}\n                touchedName={formikReset.touched.password}\n              />\n\n              <Input\n                id=\"confirmpassword\"\n                name=\"confirmpassword\"\n                placeholder=\"CONFIRM PASSWORD\"\n                variant=\"filled\"\n                type=\"password\"\n                onChange={formikReset.handleChange}\n                value={formikReset.values.confirmpassword}\n                bg=\"#FFFCF2\"\n                _hover=\"black\"\n                focusBorderColor=\"#FF8744\"\n                errorBorderColor=\"crimson\"\n                error={formikReset.errors.confirmpassword}\n                onBlur={formikReset.handleBlur}\n                touchedName={formikReset.touched.confirmpassword}\n              />\n              <Button\n                type=\"submit\"\n                className=\"auth-form-button\"\n                variantColor=\"orange\"\n                rightIcon=\"arrow-forward\"\n                size=\"lg\"\n                isLoading={loading}\n              >\n                Reset Password\n              </Button>\n\n              <Link to=\"/login\">Back to login</Link>\n            </form>\n          </div>\n        </div>\n      </AuthStyle>\n    );\n  } else {\n    return (\n      <AuthStyle>\n        <div className=\"auth-container\">\n          <div className=\"auth-banner\">\n            <Preview pageName=\"Account Recovery\" />\n          </div>\n\n          <div className=\"auth-form\">\n            <div className=\"logo\">\n              <Logo />\n            </div>\n\n            <form onSubmit={formik.handleSubmit}>\n              <h2>Account Recovery</h2>\n              <h3>Enter your email to request a password reset</h3>\n\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"EMAIL\"\n                variant=\"filled\"\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                bg=\"#FFFCF2\"\n                _hover=\"black\"\n                focusBorderColor=\"#FF8744\"\n                errorBorderColor=\"crimson\"\n                error={formik.errors.email}\n                onBlur={formik.handleBlur}\n                touchedName={formik.touched.email}\n              />\n\n              <Button\n                type=\"submit\"\n                className=\"auth-form-button\"\n                variantColor=\"orange\"\n                rightIcon=\"arrow-forward\"\n                size=\"lg\"\n                isLoading={loading}\n              >\n                Reset Password\n              </Button>\n\n              <Link to=\"/login\">Back to login</Link>\n            </form>\n          </div>\n        </div>\n      </AuthStyle>\n    );\n  }\n};\n\nexport default withApollo(AccountRecovery);\n","import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalContent,\n  ModalHeader\n} from \"@chakra-ui/core\";\n\nfunction ModalPopup({ isOpen, onClose, size = \"xl\", children, title }) {\n  return (\n    <Modal onClose={onClose} size={size} isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>{children}</ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ModalPopup;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Input,\n  Select,\n  Flex,\n  Button,\n  ModalFooter,\n  Avatar,\n  Stack,\n  Heading,\n  FormLabel,\n  Switch,\n  useToast\n} from \"@chakra-ui/core\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UPDATE_USER_DETAILS } from \"../../graphql/mutations\";\nimport { GET_UNITS } from \"../../graphql/queries\";\n\nimport { withApollo } from \"react-apollo\";\n\nconst EditProfile = ({ onClose, data, client }) => {\n  const toast = useToast();\n  const [loading, setLoading] = useState(false);\n  // const [updatedData, setUpdatedData] = useState([]);\n  const [heightUnits, setHeightUnits] = useState([]);\n  const [weightUnits, setWeightUnits] = useState([]);\n  const [updatedData, setUpdatedData] = useState(data);\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_UNITS\n      })\n      .then(res => {\n        const weightUnit = res.data.units.filter(\n          unit => unit.type === \"weight\"\n        );\n        const heightUnit = res.data.units.filter(\n          unit => unit.type === \"height\"\n        );\n        setHeightUnits(heightUnit);\n        setWeightUnits(weightUnit);\n      })\n      .catch(() => {\n        alert(\n          \"An error occurred.\",\n          \"Unable to complete onboarding. Please reload the page and try again\",\n          \"error\"\n        );\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      firstname: updatedData.firstname ? updatedData.firstname : \"\",\n      lastname: updatedData.lastname ? updatedData.lastname : \"\",\n      email: updatedData.email ? updatedData.email : \"\",\n      height: updatedData.height,\n      heightUnit: updatedData.heightUnit.id,\n      weight: updatedData.weight,\n      weightUnit: updatedData.weightUnit.id,\n      goal: updatedData.goal ? updatedData.goal : \"\",\n      reminderType: updatedData.reminderType\n        ? updatedData.reminderType\n        : \"none\",\n      experience: updatedData.experience\n    },\n    validationSchema: yup.object().shape({\n      firstname: yup.string().required(\"Please enter your firstname\"),\n      lastname: yup.string().required(\"Please enter your lastname\"),\n      email: yup.string().email(),\n      height: yup.number().required(\"Please enter your height\"),\n      heightUnit: yup.string().required(\"Please select your height unit\"),\n      weight: yup.number().required(\"Please enter your weight\"),\n      weightUnit: yup.string().required(\"Please select your weight unit\"),\n      goal: yup.string().required(\"Please enter your workout goal\"),\n      experience: yup.string().required(\"Please select your experience\"),\n      reminderType: yup.string()\n    }),\n\n    onSubmit: value => {\n      setLoading(true);\n\n      client\n        .mutate({\n          mutation: UPDATE_USER_DETAILS,\n          variables: {\n            firstname: value.firstname,\n            lastname: value.lastname,\n            experience: value.experience,\n            equipment: value.equipment,\n            height: value.height,\n            weight: value.weight,\n            heightUnit: value.heightUnit,\n            weightUnit: value.weightUnit,\n            goal: value.goal,\n            reminderType: value.reminderType\n          }\n        })\n        .then(res => {\n          setLoading(false);\n          setUpdatedData(res.data.updateUser);\n          alert(\"Profile Updates Successfully\", \"\", \"success\");\n\n          onClose();\n          setTimeout(() => {\n            window.location.reload();\n          }, 500);\n        })\n        .catch(error => {\n          setLoading(false);\n          if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n            alert(\n              \"An error occurred.\",\n              error.graphQLErrors[0].message,\n              \"error\"\n            );\n          } else {\n            alert(\"Unable to update profile\", \"\", \"error\");\n          }\n        });\n    }\n  });\n\n  return (\n    <Box>\n      <Stack>\n        <Avatar\n          src={data.photo}\n          size=\"2xl\"\n          marginLeft=\"35%\"\n          marginBottom=\"20px\"\n        />\n        <Button variant=\"outline\" variantColor=\"orange\">\n          Edit Profile Picture\n        </Button>\n      </Stack>\n      <form onSubmit={formik.handleSubmit}>\n        <Box paddingTop=\"30px\">\n          <Heading size=\"sm\">First Name</Heading>\n          <Input\n            id=\"firstname\"\n            name=\"firstname\"\n            placeholder=\"FIRSTNAME\"\n            type=\"text\"\n            variant=\"flushed\"\n            onChange={formik.handleChange}\n            value={formik.values.firstname}\n            _hover=\"black\"\n            focusBorderColor=\"#FF8744\"\n            errorBorderColor=\"crimson\"\n            isInvalid={formik.errors.lastname}\n          />\n          {formik.errors.firstname && (\n            <span className=\"error\">{formik.errors.firstname}</span>\n          )}\n        </Box>\n        <Box paddingTop=\"30px\">\n          <Heading size=\"sm\">Last Name</Heading>\n          <Input\n            id=\"lastname\"\n            name=\"lastname\"\n            placeholder=\"LASTNAME\"\n            type=\"text\"\n            variant=\"flushed\"\n            onChange={formik.handleChange}\n            value={formik.values.lastname}\n            _hover=\"black\"\n            focusBorderColor=\"#FF8744\"\n            errorBorderColor=\"crimson\"\n            isInvalid={formik.errors.lastname}\n          />\n          {formik.errors.lastname && (\n            <span className=\"error\">{formik.errors.lastname}</span>\n          )}\n        </Box>\n        <Box paddingTop=\"30px\">\n          <Heading size=\"sm\">Email</Heading>\n          <Input\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"EMAIL\"\n            type=\"email\"\n            isDisabled={true}\n            variant=\"flushed\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            _hover=\"black\"\n            focusBorderColor=\"#FF8744\"\n            errorBorderColor=\"crimson\"\n            isInvalid={formik.errors.email}\n          />\n          {formik.errors.email && (\n            <span className=\"error\">{formik.errors.email}</span>\n          )}\n        </Box>\n\n        <Flex paddingTop=\"15px\" alignItems=\"center\">\n          <Box paddingTop=\"30px\">\n            <Heading size=\"sm\">Height</Heading>\n            <Input\n              id=\"height\"\n              name=\"height\"\n              placeholder=\"HEIGHT\"\n              type=\"number\"\n              variant=\"flushed\"\n              onChange={formik.handleChange}\n              value={formik.values.height}\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              isInvalid={formik.errors.height}\n            />\n            {formik.errors.height && (\n              <span className=\"error\">{formik.errors.height}</span>\n            )}\n          </Box>\n\n          <Box>\n            <Select\n              marginLeft=\"30px\"\n              marginTop=\"30px\"\n              name=\"heightUnit\"\n              onChange={formik.handleChange}\n              value={formik.values.heightUnit}\n              isInvalid={formik.errors.heightUnit}\n            >\n              {heightUnits.map(heightUnit => (\n                <option\n                  key={heightUnit.name}\n                  className=\"unitButton\"\n                  value={heightUnit.id}\n                >\n                  {heightUnit.name.charAt(0).toUpperCase() +\n                    heightUnit.name.slice(1)}\n                </option>\n              ))}\n            </Select>\n\n            {formik.errors.heightUnit && (\n              <span className=\"error\">{formik.errors.heightUnit}</span>\n            )}\n          </Box>\n        </Flex>\n        <Flex paddingTop=\"15px\" alignItems=\"center\">\n          <Box paddingTop=\"30px\">\n            <Heading size=\"sm\">Weight</Heading>\n            <Input\n              id=\"weight\"\n              name=\"weight\"\n              placeholder=\"WEIGHT\"\n              type=\"number\"\n              variant=\"flushed\"\n              onChange={formik.handleChange}\n              value={formik.values.weight}\n              _hover=\"black\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              isInvalid={formik.errors.weight}\n            />\n\n            {formik.errors.weight && (\n              <span className=\"error\">{formik.errors.weight}</span>\n            )}\n          </Box>\n\n          <Box>\n            <Select\n              name=\"weightUnit\"\n              marginLeft=\"30px\"\n              marginTop=\"30px\"\n              onChange={formik.handleChange}\n              value={formik.values.weightUnit}\n              isInvalid={formik.errors.weightUnit}\n            >\n              {weightUnits.map(weightUnit => (\n                <option\n                  key={weightUnit.name}\n                  className=\"unitButton\"\n                  value={weightUnit.id}\n                >\n                  {weightUnit.name.charAt(0).toUpperCase() +\n                    weightUnit.name.slice(1)}\n                </option>\n              ))}\n            </Select>\n\n            {formik.errors.weightUnit && (\n              <span className=\"error\">{formik.errors.weightUnit}</span>\n            )}\n          </Box>\n        </Flex>\n\n        <Flex paddingTop=\"15px\" alignItems=\"center\">\n          <Box paddingTop=\"30px\">\n            <Heading size=\"sm\">Experience</Heading>\n          </Box>\n\n          <Box>\n            <Select\n              name=\"experience\"\n              marginLeft=\"30px\"\n              marginTop=\"30px\"\n              onChange={formik.handleChange}\n              value={formik.values.experience}\n              isInvalid={formik.errors.experience}\n            >\n              <option className=\"experience\" value=\"Beginner\">\n                Beginner\n              </option>\n\n              <option className=\"experience\" value=\"Intermediate\">\n                Intermediate\n              </option>\n\n              <option className=\"experience\" value=\"Expert\">\n                Expert\n              </option>\n            </Select>\n            {formik.errors.experience && (\n              <span className=\"error\">{formik.errors.experience}</span>\n            )}\n          </Box>\n        </Flex>\n\n        <Box paddingTop=\"15px\">\n          <Heading size=\"sm\">Goal</Heading>\n          <Input\n            id=\"goal\"\n            name=\"goal\"\n            placeholder=\"WORKOUT GOAL\"\n            type=\"string\"\n            variant=\"flushed\"\n            onChange={formik.handleChange}\n            value={formik.values.goal}\n            _hover=\"black\"\n            focusBorderColor=\"#FF8744\"\n            errorBorderColor=\"crimson\"\n            isInvalid={formik.errors.goal}\n          />\n\n          {formik.errors.goal && (\n            <span className=\"error\">{formik.errors.goal}</span>\n          )}\n        </Box>\n        <Flex paddingTop=\"15px\" alignItems=\"center\">\n          <FormLabel htmlFor=\"email-alerts\">Enable email alerts?</FormLabel>\n          <Switch\n            name=\"reminderType\"\n            id=\"email-alerts\"\n            isChecked={formik.values.reminderType === \"email\"}\n            onChange={event =>\n              formik.setFieldValue(\n                \"reminderType\",\n                event.target.checked ? \"email\" : \"notification\"\n              )\n            }\n          />\n        </Flex>\n        <ModalFooter>\n          <Button\n            type=\"submit\"\n            variantColor=\"orange\"\n            mr={3}\n            isLoading={loading}\n          >\n            Save\n          </Button>\n          <Button variant=\"ghost\" variantColor=\"orange\" onClick={onClose}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </form>\n    </Box>\n  );\n};\n\nexport default withApollo(EditProfile);\n","import React, { useEffect, useState } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Avatar,\n  useToast,\n  Button,\n  useDisclosure\n} from \"@chakra-ui/core\";\n\nimport {\n  IoIosPerson,\n  IoIosMail,\n  IoIosFitness,\n  IoIosTrendingUp\n} from \"react-icons/io\";\n\nimport DashboardStyle from \"./DashboardStyle\";\n\nimport { GET_USER_DETAILS } from \"../../graphql/queries\";\nimport CustomSpinner from \"../common/Spinner\";\nimport ModalPopup from \"../common/ModalPopup\";\nimport EditProfile from \"../common/EditProfile\";\n\nconst ProfilePage = ({ client, history }) => {\n  const [userData, setUserData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const handleSave = () => {};\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_USER_DETAILS\n      })\n      .then(res => {\n        setUserData(res.data.user);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        alert(\"An error occurred.\", \"Unable to load\", \"error\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <DashboardStyle>\n        <div className=\"dashboard-content\">\n          <div className=\"user-detail\">\n            <Button variant=\"link\" variantColor=\"orange\" onClick={onOpen}>\n              Edit Profile\n            </Button>\n            <ModalPopup isOpen={isOpen} onClose={onClose} title=\"Edit Profile\">\n              <EditProfile\n                data={userData}\n                onSave={handleSave}\n                onClose={onClose}\n              />\n            </ModalPopup>\n            <Box paddingLeft=\"50px\">\n              <Flex paddingY=\"30px\" alignItems=\"center\">\n                <Box as={IoIosPerson} size=\"50px\" />\n                <Box textAlign=\"left\" paddingLeft=\"20px\">\n                  <p>Name</p>\n                  <p>{`${userData.firstname ? userData.firstname : \"\"} ${\n                    userData.lastname ? userData.lastname : \"\"\n                  }`}</p>\n                </Box>\n              </Flex>\n              <Flex paddingY=\"30px\" alignItems=\"center\">\n                <Box as={IoIosMail} size=\"50px\" />\n                <Box textAlign=\"left\" paddingLeft=\"20px\">\n                  <p>Email</p>\n                  <p>{userData.email}</p>\n                </Box>\n              </Flex>\n              <Flex paddingY=\"30px\" alignItems=\"center\">\n                <Box as={IoIosFitness} size=\"50px\" />\n                <Box textAlign=\"left\" paddingLeft=\"20px\">\n                  <p>Weight</p>\n                  <p>\n                    {userData.weight\n                      ? `${userData.weight} ${userData.weightUnit.name}`\n                      : \"none\"}\n                  </p>\n                </Box>\n              </Flex>\n              <Flex paddingY=\"30px\" alignItems=\"center\">\n                <Box as={IoIosTrendingUp} size=\"50px\" />\n                <Box textAlign=\"left\" paddingLeft=\"20px\">\n                  <p>Height</p>\n                  <p>\n                    {userData.height\n                      ? `${userData.height} ${userData.heightUnit.name}`\n                      : \"none\"}\n                  </p>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Box\n              bg=\"tomato\"\n              color=\"white\"\n              p={4}\n              width=\"70%\"\n              rounded=\"lg\"\n              marginTop=\"30px\"\n              marginLeft=\"15%\"\n            >\n              <span role=\"img\" aria-label=\"fire-emoji\">\n                🔥🔥🔥\n              </span>{\" \"}\n              You have a {userData.streak} days streak. Keep it up!\n            </Box>\n          </div>\n\n          <div className=\"dasboard-detail\">\n            <section className=\"quotes\">\n              <Avatar\n                src={userData.photo}\n                size=\"2xl\"\n                marginLeft=\"35%\"\n                marginBottom=\"20px\"\n              />\n              <Heading>{`${userData.firstname ? userData.firstname : \"\"} ${\n                userData.lastname ? userData.lastname : \"\"\n              }`}</Heading>\n            </section>\n\n            <section className=\"goal\">\n              <p>Recent Activity</p>\n              <Heading as=\"h4\" size=\"md\">\n                {/* {profileData.user.goal} */}\n              </Heading>\n            </section>\n          </div>\n        </div>\n      </DashboardStyle>\n    </Box>\n  );\n};\n\nexport default withApollo(ProfilePage);\n","import React, { useState, useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\nimport {\n  Flex,\n  Box,\n  Button,\n  useToast,\n  InputGroup,\n  Input,\n  Textarea,\n  Select,\n  Stack,\n  Heading\n} from \"@chakra-ui/core\";\nimport { CustomWorkoutStyleDetail } from \"./WorkoutStyle\";\nimport CustomSpinner from \"./../common/Spinner\";\nimport {\n  GET_WORKOUT_DETAIL,\n  EXERCISES_BY_FIELDS\n} from \"./../../graphql/queries\";\nimport { UPSERT_CUSTOM_WORKOUT } from \"./../../graphql/mutations\";\nimport { useDebounce } from \"./../../utils/index\";\n\nconst CustomWorkoutDetail = ({ client, history }) => {\n  const [workout, setWorkout] = useState({});\n  const [exercises, setExercises] = useState([]);\n  const [searchExercise, setSearchExercise] = useState(\"\");\n  const [selectedExercises, setSelectedExercises] = useState(\n    workout.exercises ? workout.exercises.map(e => e.id) : []\n  );\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const match = useRouteMatch();\n  const workoutId = match.params.id;\n  const toast = useToast();\n\n  const alert = (title, description, status) => {\n    toast({\n      title,\n      description,\n      status,\n      duration: 9000,\n      isClosable: true\n    });\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: workout.name || \"\",\n      description: workout.description || \"\",\n      intensity: workout.intensity || \"\"\n    },\n    validationSchema: yup.object().shape({\n      name: yup\n        .string()\n        .min(4)\n        .required(\"Please enter the name of the workout!\"),\n      description: yup\n        .string()\n        .min(50)\n        .required(\"Please enter the description of the workout!\"),\n      intensity: yup\n        .string()\n        .required(\"Please enter the intensity of this workout!\")\n    }),\n    onSubmit: values => {\n      setIsLoading(true);\n      client\n        .mutate({\n          mutation: UPSERT_CUSTOM_WORKOUT,\n          variables: {\n            ...values,\n            workoutId: workoutId === \"new\" ? null : workoutId,\n            exercises: selectedExercises\n          }\n        })\n        .then(res => {\n          console.log(res);\n          alert(\"Success!\", \"Your custom workout was created!\", \"success\");\n          history.push(\"/workouts\");\n          window.location.reload();\n        })\n        .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n          setError(true);\n        });\n    }\n  });\n\n  const toggleExercise = id => e => {\n    console.log(\"toggleExercise\", id, selectedExercises.includes(id));\n    if (selectedExercises.includes(id)) {\n      setSelectedExercises(ex => ex.filter(ex_id => ex_id !== id));\n    } else {\n      setSelectedExercises(ex => [...ex, id]);\n    }\n  };\n\n  const removeExercise = id => e => {\n    setSelectedExercises(ex => ex.filter(ex_id => ex_id !== id));\n  };\n\n  let exerciseSearch = useDebounce(searchExercise, 700);\n\n  const resetSearch = e => {\n    setSearchExercise(s => \"\");\n  };\n\n  useEffect(() => {\n    let promises = [];\n    if (workoutId !== \"new\") {\n      promises = [\n        client.query({\n          query: GET_WORKOUT_DETAIL,\n          variables: {\n            id: workoutId\n          }\n        }),\n        client.query({\n          query: EXERCISES_BY_FIELDS,\n          variables: {\n            search: exerciseSearch,\n            fields: [\"name\"]\n          }\n        })\n      ];\n      Promise.all(promises)\n        .then(([workoutRes, exercisesRes]) => {\n          setWorkout(workoutRes.data.workout);\n          setExercises(exercisesRes.data.exercises);\n          setSelectedExercises(\n            workoutRes.data.workout.exercises.map(e => e.id)\n          );\n          setIsLoading(false);\n        })\n        .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n          setError(true);\n        });\n    } else {\n      client\n        .query({\n          query: EXERCISES_BY_FIELDS,\n          variables: {\n            search: exerciseSearch,\n            fields: [\"name\"]\n          }\n        })\n        .then(exercisesRes => {\n          setExercises(exercisesRes.data.exercises);\n          setIsLoading(false);\n        })\n        .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n          setError(true);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Box>\n        <Flex\n          width=\"100vw\"\n          height=\"100vh\"\n          justifyContent=\"center\"\n          align=\"center\"\n        >\n          <CustomSpinner thickness=\"6px\" size=\"xl\" text=\"Loading...\" />\n        </Flex>\n      </Box>\n    );\n  }\n\n  if (error) {\n    alert(\n      \"An error occurred.\",\n      \"Unable to load custom workout detail\",\n      \"error\"\n    );\n    return <Redirect to=\"/workouts\" />;\n  }\n\n  return (\n    <CustomWorkoutStyleDetail>\n      <Heading className=\"cw-title\" textAlign=\"left\">\n        {match.params.id !== \"new\" ? \"Edit workout\" : \"Create workout\"}\n      </Heading>\n      <form onSubmit={formik.handleSubmit}>\n        <Stack spacing={4}>\n          <InputGroup>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"NAME\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              bg=\"#FFFCF2\"\n              variant=\"flushed\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.name}\n            />\n          </InputGroup>\n          <Textarea\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"DESCRIPTION\"\n            onChange={formik.handleChange}\n            value={formik.values.description}\n            variant=\"flushed\"\n            bg=\"#FFFCF2\"\n            focusBorderColor=\"#FF8744\"\n            onBlur={formik.handleBlur}\n            errorBorderColor=\"crimson\"\n            error={formik.errors.description}\n          />\n          {formik.touched.description && formik.errors.description ? (\n            <span className=\"error\">{formik.errors.description}</span>\n          ) : null}\n          <InputGroup>\n            <Select\n              id=\"intensity\"\n              name=\"intensity\"\n              placeholder=\"Select intensity...\"\n              onChange={formik.handleChange}\n              value={formik.values.intensity}\n              variant=\"flushed\"\n              bg=\"#FFFCF2\"\n              focusBorderColor=\"#FF8744\"\n              errorBorderColor=\"crimson\"\n              error={formik.errors.intensity}\n            >\n              <option value=\"Low\">Low</option>\n              <option value=\"Intermediate\">Intermediate</option>\n              <option value=\"Expert\">Expert</option>\n            </Select>\n          </InputGroup>\n          <div className=\"list-exercises\">\n            <Heading size=\"md\" textAlign=\"left\">\n              Exercises\n            </Heading>\n            <div className=\"search-exercises\">\n              <Input\n                id=\"searchExercise\"\n                name=\"searchExercise\"\n                placeholder=\"SEARCH AND ADD EXERCISES\"\n                onChange={e => setSearchExercise(e.target.value)}\n                value={searchExercise}\n                variant=\"flushed\"\n                bg=\"#FFFCF2\"\n                focusBorderColor=\"#FF8744\"\n                autoComplete=\"off\"\n              />\n              <div className=\"search-results\" onMouseLeave={resetSearch}>\n                {exerciseSearch\n                  ? exercises\n                      .filter(e => e.name.includes(exerciseSearch))\n                      .map(exercise => (\n                        <p\n                          key={exercise.id}\n                          id={exercise.id}\n                          onClick={toggleExercise(exercise.id)}\n                          className={\n                            selectedExercises.includes(exercise.id)\n                              ? \"selected\"\n                              : \"\"\n                          }\n                        >\n                          {exercise.name} - {exercise.type} -{\" \"}\n                          {exercise.difficulty}\n                        </p>\n                      ))\n                  : null}\n              </div>\n            </div>\n            {selectedExercises.map(id => {\n              const exercise = exercises.find(e => e.id === id);\n              return (\n                <p key={`list_${id}`}>\n                  {exercise.name} - {exercise.type} - {exercise.difficulty}\n                  <Button\n                    size=\"sm\"\n                    onClick={removeExercise(id)}\n                    leftIcon=\"close\"\n                    variant=\"outline\"\n                    variantColor=\"red\"\n                  >\n                    Remove\n                  </Button>\n                </p>\n              );\n            })}\n          </div>\n        </Stack>\n        <Button\n          type=\"submit\"\n          className=\"cw-submit-btn\"\n          variantColor=\"orange\"\n          rightIcon=\"arrow-forward\"\n          size=\"lg\"\n          isLoading={isLoading}\n        >\n          Submit\n        </Button>\n      </form>\n    </CustomWorkoutStyleDetail>\n  );\n};\n\n// adding proptypes\nCustomWorkoutDetail.propTypes = {\n  client: PropTypes.object.isRequired\n};\n\nexport default withApollo(CustomWorkoutDetail);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { isLoggedIn } from \"../../utils\";\n\nconst isSignedIn = isLoggedIn();\n\nconst StyledFooter = styled.footer`\n  background-color: black;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.8rem 0;\n  color: white;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n\n  @media only screen and (max-width: 500px) {\n    flex-direction: column;\n    justify-content: center;\n  }\n  p {\n    padding-left: 2rem;\n    font-family: \"Ubuntu\", sans-serif;\n\n    @media only screen and (max-width: 500px) {\n      padding: 2rem 0;\n      width: 100%;\n      text-align: center;\n    }\n  }\n\n  .socials {\n    color: white;\n    padding-right: 2rem;\n\n    @media only screen and (max-width: 500px) {\n      padding-right: 0;\n    }\n\n    i {\n      transition: all 0.4s ease-in-out;\n      &:hover {\n        transform: scale(1.2);\n      }\n    }\n\n    span {\n      padding: 0 0.5rem;\n    }\n  }\n`;\n\nconst Footer = ({ location }) => {\n  if (isSignedIn === true && location.pathname !== \"/onboarding\") {\n    return (\n      <StyledFooter>\n        <p>&copy; 2020 trackdrills</p>\n\n        <div className=\"socials\">\n          <a href=\"mailto:trackdrillslambdalabs@gmail.com\">\n            <span>\n              {\" \"}\n              <i className=\"fas fa-2x fa-envelope\"></i>\n            </span>\n          </a>\n          <a href=\"https://twitter.com/trackdrills\">\n            <span>\n              <i className=\"fab fa-2x fa-twitter\"></i>\n            </span>\n          </a>\n\n          <a href=\"https://www.linkedin.com\">\n            <span>\n              {\" \"}\n              <i className=\"fab fa-2x fa-linkedin\"></i>\n            </span>\n          </a>\n        </div>\n\n        <div className=\"scroll\"></div>\n      </StyledFooter>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default withRouter(Footer);\n","import React from \"react\";\nimport { ThemeProvider, CSSReset, theme } from \"@chakra-ui/core\";\nimport { Router } from \"react-router-dom\";\nimport { createHashHistory } from \"history\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\nimport ReactGA from \"react-ga\";\n\nimport \"./index.css\";\nimport { getUserDetails } from \"./utils\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport Onboarding from \"./components/auth/Onboarding\";\nimport \"./App.css\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Login from \"./components/auth/LogIn\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport SignUp from \"./components/auth/SignUp\";\nimport WorkoutList from \"./components/workouts/WorkoutList\";\nimport WorkoutDetail from \"./components/workouts/WorkoutDetail\";\nimport Exercises from \"./components/exercise/ExerciseList\";\nimport ExerciseDetail from \"./components/exercise/ExerciseDetail\";\nimport Navigation from \"./components/common/Navigation\";\nimport WorkoutHistory from \"./components/workouts/WorkoutHistory\";\nimport ScheduleDetail from \"./components/schedule/ScheduleDetail\";\nimport AccountRecovery from \"./components/auth/AccountRecovery\";\nimport ProfilePage from \"./components/dashboard/ProfilePage\";\nimport CustomWorkoutDetail from \"./components/workouts/CustomWorkoutDetail\";\nimport Footer from \"./components/common/Footer\";\n\nconst userData = getUserDetails();\nconst { REACT_APP_GOOGLE_ANALYTICS_KEY, REACT_APP_GraphQL_API } = process.env;\n\n// Initialize google analytics\nReactGA.initialize(REACT_APP_GOOGLE_ANALYTICS_KEY);\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => {\n    return Math.random();\n  }\n});\n\nconst link = new createUploadLink({\n  uri: REACT_APP_GraphQL_API,\n  fetchOptions: {\n    // mode: \"no-cors\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  if (userData) {\n    return {\n      headers: {\n        ...headers,\n        authorization: userData.token\n      }\n    };\n  }\n  return {\n    headers: {\n      ...headers\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  cache,\n  link: authLink.concat(link)\n});\n\nconst history = createHashHistory();\nconst App = ({ cordova }) => {\n  return (\n    <ApolloProvider client={client}>\n      <Router history={history}>\n        <ThemeProvider\n          theme={{\n            ...theme,\n            fonts: { ...theme.fonts, body: \"Roboto\", heading: \"Ubuntu\" }\n          }}\n        >\n          <CSSReset />\n          <div className=\"App\" data-testid=\"App\">\n            <Navigation />\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/accountrecovery\" component={AccountRecovery} />\n              <Route\n                exact\n                path=\"/accountrecovery/:token\"\n                component={AccountRecovery}\n              />\n              <PrivateRoute exact path=\"/profile\" component={ProfilePage} />\n              <PrivateRoute exact path=\"/exercises\" component={Exercises} />\n              <PrivateRoute exact path=\"/exercise/:id\" component={ExerciseDetail} />\n              <PrivateRoute exact path=\"/onboarding\" component={Onboarding} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute exact path=\"/workouts\" component={WorkoutList} />\n              <PrivateRoute exact path=\"/schedule\" component={ScheduleDetail} />\n              <PrivateRoute exact path=\"/workout/:id\" component={WorkoutDetail} />\n              <PrivateRoute\n                exact\n                path=\"/my/workout/:id\"\n                component={CustomWorkoutDetail}\n              />\n              <PrivateRoute exact path=\"/workouthistory\" component={WorkoutHistory} />\n            </Switch>\n            <Footer />\n          </div>\n        </ThemeProvider>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'cordova_script';\n\nconst renderReactDom = (cordova = false) => {\n  ReactDOM.render(<App cordova={cordova} />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom(true);\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}